conky.config = {
    
    --屏幕上的对齐位置,
    alignment = 'top_right',
    
    --追加作为参数给出的文件,
    --append_file,
    
    --布尔值,如果为true,Conky将被分叉到后台 开始的时候,
    background = no,
    
    --内边框边距(以像素为单位)(边框之间的边距 文本),
    --border_inner_margin,
    
    --外边框边距(以像素为单位)(边框 和窗口的边缘),
    --border_outer_margin,
    
    --边框宽度(以像素为单位),
    border_width = 1,
    
    --预定义一种颜色用于conky.text段 ,将N替换为0到9之间的数字,
    --colorN,
    
    --填充控制台栏的字符,
    --console_bar_fill = '#',
    
    --一个用于取消填充控制台栏的字符,
    --console_bar_unfill = '.',
    
    --逗号分隔的字符串列表,
    --console_graph_ticks,
    
    --CPU监视的平均样本数,
    cpu_avg_samples = 2,
    
    --指定条形的默认高度,
    --default_bar_height = 6,
    
    --指定条形的默认宽度,
    --default_bar_width = 0,
    
    --默认颜色和边框颜色,
    default_color = 'lightgrey',
    
    --指定仪表的默认高度,
    --default_gauge_height = 25,
    
    --指定仪表板的默认宽度,
    --default_gauge_width = 40,
    
    --指定图形的默认高度,
    --default_graph_height = 25,
    
    --指定图形的默认宽度,
    --default_graph_width = 0,
    
    --默认轮廓颜色,
    default_outline_color = 'white',
    
    --默认阴影颜色和边框的阴影颜色,
    default_shade_color = 'white',
    
    --检查一个或多个电池,
    --detect_battery = 'BAT0',
    
    --启用以禁用基于通知的自动配置重新加载 功能,
    --disable_auto_reload,
    
    --磁盘I/O监视的平均样本数,
    --diskio_avg_samples,
    
    --指定要连接到的X显示,
    --display,
    
    --使用Xdbe扩展,
    double_buffer=yes,
    
    --渲染绘制的图像时混合,
    --draw_blended = yes,
    
    --在文本周围绘制边框,
    draw_borders = false,
    
    --在图表周围绘制边框,
    draw_graph_borders = true,
    
    --画出轮廓,
    draw_outline = false,
    
    --拉上窗帘,
    draw_shades = false,
    
    --写入标准输出时在末尾多加一个换行符,
    extra_newline = false,
    
    --字体名称,
    --font,
    
    --预定义要在conky.text段中使用的字体 将N替换为0到9之间的一个数字(包括0和9),
    --fontN,
    
    --布尔值,如果为true,Conky将在您切换 工作空间这可能会导致某些WM出现延迟/闪烁,
    --forced_redraw,
    
    --如果启用,以字节为单位的值将打印在可读格式(即KiB/MiB等),
    --format_human_readable,
    
    --屏幕右边框或左边框之间的间隙,以像素为单位 -x,
    --gap_x = 15,
    
    --屏幕顶部或底部边界之间的间隙,以像素为单位 -y,
    --gap_y = 60,
    
    --为GitHub通知指定API令牌,
    --github_token = '',
    
    --hddtemp对象要连接到的主机名,
    --hddtemp_host ='127.0.0.1',
    
    --用于hddtemp连接的端口,
    --hddtemp_port = 7634,
    
    --用于侦听HTTP连接的端口,
    --http_port = 10080,
    
    --设置此选项后,使用out_to_http生成的页面将 自动刷新每个时间间隔,
    --http_refresh = no,
    
    --在测试接口是否处于可用状态时...........,
    --if_up_strictness,
    
    --默认全局IMAP服务器,
    --imap=主机 用户名 密码 -i 5 -f 'INBOX'' -p 143 -e 'command' -r retries,
    
    --用于邮件检查的邮件后台处理,
    --mail_spool,
    
    --允许每个端口监视器最多跟踪连接,
    --max_port_monitor_connections = 256,
    
    --当输出中的一行包含 width 字符和 end 未到达则下一个字符将从新行开始。如果你愿意 确保行不会断行将“宽度 设置为 0,
    --max_text_width=integer_number,
    
    --用户文本缓冲区的最大大小（以字节为单位）即内部的文本 conky.text 部分,
    --max_user_text=16384,
    
    --窗口的最大宽度,
    maximum_width = 200,
    
    --窗口的最小高度,
    minimum_height = 50,
    
    --窗口的最小宽度,
    minimum_width = 200,
    
    --MPD服务器的主机,
    --mpd_host = '127.0.0.1',
    
    --MPD服务器密码,
    --mpd_password = '',
    
    --MPD服务器的端口,
    --mpd_port,
    
    --音乐播放器线程更新间隔,
    --music_player_interval,
    
    --mysql 数据库,
    --mysql_db = 'mysql',
    
    --mysql 主机,
    --mysql_host = 'localhost',
    
    --mysql 密码,
    --mysql_password,
    
    --mysql端口,
    --mysql_port = 3306,
    
    --mysql 用户名,
    --mysql_user,
    
    --要对净数据求值的样本数,
    net_avg_samples = 2,
    
    --从已用内存中减去 文件系统 缓冲区
    --no_buffers = no,
    
    --nvidia变量将使用的显示,
    --nvidia_display = '$DISPLAY ',
    
    --将文本打印到标准输出,
    out_to_console = false,
    
    --让conky充当一个小型的http服务器来提供文本,
    --out_to_http,
    
    --在控制台中打印文本,
    --out_to_ncurses,
    
    --将文本打印到标准错误,
     out_to_stderr = false,
    
    --打开Wayland窗口以显示输出,
    --out_to_wayland = no,
    
    --当设置为no时,X中将没有输出,
    --out_to_x = yes,
    
    --强制UTF8,需要XFT,
    --override_utf8_locale,
    
    --覆盖作为参数给出的文件,
    --overwrite_file,
    
    --在自己的窗口中绘制conky而不是在根窗口中绘制,
    own_window = true,
    
    --启用ARGB视觉效果时,使用此选项修改,
    own_window_argb_value = yes,
    
    --布尔型 使用ARGB视觉 ARGB可用于实现真实的透明注意 在X11上需要一个复合管理器,
    own_window_argb_visual = no,
    
    --手动设置WM_CLASS名称,
    own_window_class = 'Conky',
    
    --如果own_window_transparent为否则设置指定的背景 颜色接受十六进制值,
    --own_window_colour = 'black',
    
    --如果own_window为yes,则可以指定逗号分隔的窗口管理器提示来影响康奇的表现,
    own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',
    
    --手动设置窗口名称,
    --own_window_title = 'ARKFUTURE <hostname>',
    
    --布尔值,设置透明度,如果启用ARGB visual则设置 背景不透明度为0%,
    own_window_transparent = yes,
    
    --窗口类型,
    own_window_type = 'normal',
    
    --将百分比填充到此小数位数,
    --pad_percents = 0,
    
    --默认全局POP3服务器,
    --pop3=主机 用户名 密码 -i 5 -f 'INBOX'' -p 110 -e 'command' -r retries,
    
    --将单位缩短为单个字符,
    --short_units = no,
    
    --显示图形覆盖的时间范围,
    show_graph_range = false,
    
    --在缩放图形中显示最大值,
    show_graph_scale = false,
    
    --更改用于插值的颜色空间,
    --graph_gradient_mode = 'rgb',
    
    --边界点彩
    --stippled_borders = 0,
    
    --边界点彩,
    --store_graph_data_explicitly,
    
    --显示温度的所有对象的所需输出单位,
    --temperature_unit = 'celsius',
    
    --定义一个模板供以后在conky.text段中使用,
    --templateN,
    
    --标准文本缓冲区的大小,
    --text_buffer_size = 256,
    
    --如果为true,输出时间的变量将输出一个数字,
    --times_in_seconds,
    
    --如果为true,则top中的cpu将显示一个处理器的动力,
    --top_cpu_separate,
    
    --如果为true,则top-name显示每个过程,
    --top_name_verbose,
    
    --$top名称值的宽度(默认为15个字符),
    --top_name_width = 15,
    
    --Conky在退出前更新的总次数,
    --total_run_times = 0,
    
    --要放置在值和单位之间的字符串,
    --units_spacer,
    
    --更新间隔,
    update_interval = 3.0,
    
    --使用电池电源运行时的更新间隔,
    --update_interval_on_battery = seconds,
    
    --布尔值,如果为true,则文本以大写形式呈现,
    uppercase = false,
    
    --在某些对象周围添加空间以阻止它们移动,
    use_spacer = 'none',
    
    --使用Xft(反锯齿字体和东西),
    use_xft = true
    
    --Xft字体的Alpha必须是1和0之间的值,
    --xftalpha,
    
    --指定Xinerama头,
    --xinerama_head,
    

}


conky.text = [[
 
${color grey}${font StyleBats:size=16}T${font OpenLogos:size=10}  线程 $stippled_hr
${color grey} name              PID   CPU%   ${alignr}MEM%
${color #FF8C00} ${top name 1} ${top pid 1} ${top cpu 1} ${alignr}${top mem 1}
${color #FFA54F} ${top name 2} ${top pid 2} ${top cpu 2} ${alignr}${top mem 2}
${color #FFD700} ${top name 3} ${top pid 3} ${top cpu 3} ${alignr}${top mem 3}
${color #FFEC8B} ${top name 4} ${top pid 4} ${top cpu 4} ${alignr}${top mem 4}
 
${color grey}${font StyleBats:size=16}E${font :size=10}   内存 $stippled_hr
${color #F05020}内存 : $mem/$memmax - $memperc% ${membar 6}
${color #008060}空间使用 : $swap/$swapmax  ${swapbar 6}
/:  ${fs_used /}/${fs_size /}         ${fs_bar 6 /}
/boot: ${fs_used /boot}/${fs_size /boot}   ${fs_bar 6 /boot}
 
${color grey} ${font PizzaDude Bullets:size=16}@${font OpenLogos:size=10}   网络 $stippled_hr
${color grey}使用中:
${color green} 上传:${downspeed enp0s3} KB/s $alignr ${totaldown enp0s3}
${color green} 下载:${upspeed enp0s3} KB/s $alignr ${totalup enp0s3}
${color green} 公网地址:${color green} $alignr ${execi 3600 wget ifconfig.me}

]]