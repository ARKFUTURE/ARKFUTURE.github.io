/*
 * OperServ 的示例配置文件.
 */
 

service 
{
	/*
	 * OperServ 客户端的名称.
	 * 如果修改此值, 可能也需要修改 operserv 模块配置中的 client 指令.
	 */
	nick = "OperServ"
 
	/*
	 * OperServ 客户端的用户名.
	 */
	user = "services"
 
	/*
	 * OperServ 客户端的主机名.
	 */
	host = "services.host" 
 
	/*
	 * OperServ 客户端的真实姓名.
	 */
	gecos = "Operator Service"
 
	/*
	 * 此客户端应使用的模式.
	 * 除非您清楚自己在做什么, 否则请勿修改此项.
	 *
	 * 这些模式高度依赖 IRCd 类型.如果保持注释状态, 将根据加载的协议模块使用合理的默认值.
	 *
	 * 注意: 错误设置此选项可能导致客户端部分或全部功能失效.若因此导致问题, 我们将不提供支持.
	 */
	#modes = "+o"
 
	/*
	 * 此服务应加入的频道列表(逗号分隔, 可选).
	 * 除日志频道外, 此功能用途有限, 因为服务仅在指定频道中闲置, 不会接受任何命令.
	 *
	 * 可通过模式字符或前缀符号为频道添加前缀.
	 */
	#channels = "@#services,#mychan"
}


/*
 * OperServ 核心模块.
 *
 * 提供 OperServ 的基础功能.
 */
module 
{
	name = "operserv"
 
	/*
	 * 应作为 OperServ 的客户端名称.
	 */
	client = "OperServ"
 
	/*
	 * 定义 AKILLs, CHANKILLs, SNLINEs, SQLINEs 的默认过期时间.
	 */
	autokillexpiry = 30d 
	chankillexpiry = 30d 
	snlineexpiry = 30d 
	sqlineexpiry = 30d 
 
	/*
	 * 若启用, Services 将在添加 AKILL 后立即发送 AKILL 命令, 无需手动踢除用户.
	 *
	 * 此指令为可选但建议配置.
	 */
	akillonadd = yes 
 
	/*
	 * 若启用, Services 将在添加 SNLINE 后立即发送 (SVS)KILL 命令, 无需手动踢除用户.
	 *
	 * 此指令为可选.
	 */
	killonsnline = yes 
 
	/*
	 * 若启用, Services 将在添加 SQLINE 后立即发送 (SVS)KILL 命令, 无需手动踢除用户.
	 *
	 * 此指令为可选.
	 */
	killonsqline = yes 
 
	/*
	 * 在 AKILL 封禁原因中添加执行该操作的 IRC 操作员昵称.
	 *
	 * 此指令为可选.
	 */
	addakiller = yes 
 
	/*
	 * 为 AKILL 添加唯一标识符.用户可在封禁原因中看到此 ID, 便于快速查询、修改或删除 AKILL.
	 */
	akillids = yes 
 
	/*
	 * 若启用, 仅允许 IRC 操作员使用 OperServ, 不受命令访问限制影响.
	 *
	 * 此指令为可选但建议配置.
	 */
	opersonly = yes 
}


/*
 * OperServ 核心命令.
 *
 * 在 Anope 中, 模块可提供多个命令, 每个命令有唯一名称.加载这些模块后, 
 * 可将命令配置到任意客户端, 并使用自定义名称.
 *
 * 可为命令指定权限名称, 要求执行者必须具有该权限(通过 opertype 配置).
 *
 * 以下为默认配置, 除非需要修改默认行为, 否则无需编辑.
 */
 
/* 添加帮助命令 */
command { service = "OperServ"; name = "HELP"; command = "generic/help"; }
 
/*
 * os_akill 
 *
 * 提供命令 operserv/akill.
 *
 * 用于全网封禁用户.
 */
module { name = "os_akill" }
command { service = "OperServ"; name = "AKILL"; command = "operserv/akill"; permission = "operserv/akill"; }
 
/*
 * os_chankill 
 *
 * 提供命令 operserv/chankill.
 *
 * 用于从整个频道封禁用户.
 */
module { name = "os_chankill" }
command { service = "OperServ"; name = "CHANKILL"; command = "operserv/chankill"; permission = "operserv/chankill"; }
 
/*
 * os_defcon 
 *
 * 提供命令 operserv/defcon.
 *
 * 用于设置 Services 的防御等级(DefCon), 可在机器人攻击时限制服务访问.
 */
#module 
{
	name = "os_defcon"
 
	/*
	 * Services 启动时的默认 DefCon 等级(1-5).等级 5 为正常运作, 
	 * 等级 1 为最高限制.若设为 0 或未设置, DefCon 功能将被禁用.
	 */
	#defaultlevel = 5 
 
	/*
	 * 定义 DefCon 等级 1-4 的触发操作列表(空格分隔).
	 *
	 * 可用操作包括: 
	 * - nonewchannels: 禁止注册新频道 
	 * - nonewnicks: 禁止注册新昵称 
	 * - nomlockchanges: 禁止修改已注册频道的 MLOCK 
	 * - forcechanmodes: 强制所有频道应用 chanmodes 指令定义的模式 
	 * - reducedsessions: 将会话限制降低至 sessionlimit 定义的值 
	 * - nonewclients: 踢除所有尝试连接的新客户端 
	 * - operonly: Services 仅响应 IRC 操作员 
	 * - silentoperonly: Services 静默忽略非 IRC 操作员 
	 * - akillnewclients: 自动 AKILL 尝试连接的新客户端 
	 * - nonewmemos: 禁止发送新备忘录以防止 MemoServ 攻击 
	 */
	level4 = "nonewchannels nonewnicks nomlockchanges reducedsessions"
	level3 = "nonewchannels nonewnicks nomlockchanges forcechanmodes reducedsessions"
	level2 = "nonewchannels nonewnicks nomlockchanges forcechanmodes reducedsessions silentoperonly"
	level1 = "nonewchannels nonewnicks nomlockchanges forcechanmodes reducedsessions silentoperonly akillnewclients"
 
	/*
	 * DefCon 启用 "reducedsessions" 时的新会话限制值.
	 */
	#sessionlimit = 2 
 
	/*
	 * DefCon 阻止新客户端连接时的 AKILL 有效期.
	 */
	#akillexpire = 5m 
 
	/*
	 * DefCon 强制频道模式设置(如 "+R").
	 * 注意: DefCon 解除时将反转此模式(如 "-R"), 需谨慎选择模式类型.
	 */
	#chanmodes = "+R"
 
	/*
	 * 自动将 DefCon 恢复为等级 5 的超时时间(防止操作员遗忘).
	 *
	 * 此指令为可选.
	 */
	#timeout = 15m 
 
	/*
	 * 若启用, Services 将在 DefCon 等级变化时发送全局通知.
	 *
	 * 此指令为可选.
	 */
	#globalondefcon = yes 
 
	/*
	 * 若启用, Services 将发送 message 指令定义的自定义全局通知.
	 *
	 * 此指令为可选.
	 */
	#globalondefconmore = yes 
 
	/*
	 * DefCon 等级变化时发送的自定义消息(需启用 globalondefconmore).
	 */
	message = "Put your message to send your users here. Don't forget to uncomment globalondefconmore"
 
	/*
	 * DefCon 恢复等级 5 时发送的特定消息(将覆盖 globalondefcon 和 globalondefconmore).
	 */
	offmessage = "Services are now back to normal, sorry for any inconvenience"
 
	/*
	 * DefCon 踢除或封禁客户端时显示的原因.
	 */
	akillreason = "This network is currently not accepting connections, please try again later."
}
command { service = "OperServ"; name = "DEFCON"; command = "operserv/defcon"; permission = "operserv/defcon"; }

/*
 * os_dns 
 *
 * 提供命令 operserv/dns.
 *
 * 此模块要求 m_dns 模块已加载.
 *
 * 此模块允许控制 DNS 区域. 这对于控制用户分配到哪个服务器以实现负载均衡很有用, 以及自动移除分裂的服务器.
 *
 * 要使用此模块, 你必须为服务设置一个名称服务器记录, 以便 DNS 查询指向服务.
 *
 * 或者, 你可以使用一个从属 DNS 服务器来隐藏服务的 IP, 提供查询缓存, 并提供更好的容错性.
 *
 * 使用 BIND 实现此功能, 配置类似如下:
 *
 * options { max-refresh-time 60; };
 * zone "irc.example.com"  IN {
 *   type slave;
 *   masters { 127.0.0.1 port 5353; };
 * };
 *
 * 其中 127.0.0.1:5353 是服务监听的 IP 和端口.
 * 我们建议你在外部防火墙上对 Anope 监听的端口同时阻止 UDP 和 TCP.
 *
 * 最后, 为 irc.example.com.  设置一个 NS 记录指向 BIND 或服务.
 */
#module 
{
	name = "os_dns"
 
	/* 记录的 TTL. 如果你的记录经常变化, 这个值应该设得非常低. */
	ttl = 1m 
 
	/* 如果服务器掉线用户数达到此值, 该服务器会被自动从 DNS 区域中移除.
	 * 此指令是可选的.
	 */
	user_drop_mark = 50 
 
	/* 用于 user_drop_mark 的时间段. */
	user_drop_time = 1m 
 
	/* 当服务器因掉线用户被移除后, 在此时间后会被重新添加回区域.
	 * 此指令是可选的.
	 */
	user_drop_readd_time = 5m 
 
	/* 如果设置为 yes, 当服务器分裂时, 它会被自动从区域中移除. */
	remove_split_servers = yes 
 
	/* 如果设置为 yes, 当服务器连接到网络时, 如果它是已知服务器, 会自动添加到区域中. */
	readd_connected_servers = no 
}
command { service = "OperServ"; name = "DNS"; command = "operserv/dns"; permission = "operserv/dns"; }
 
/*
 * os_config 
 *
 * 提供命令 operserv/config.
 *
 * 用于在服务运行时查看和设置配置选项.
 */
module { name = "os_config" }
command { service = "OperServ"; name = "CONFIG"; command = "operserv/config"; permission = "operserv/config"; }
 
/*
 * os_forbid 
 *
 * 提供命令 operserv/forbid.
 *
 * 用于禁止使用特定昵称, 频道, 电子邮件等.
 */
module { name = "os_forbid" }
command { service = "OperServ"; name = "FORBID"; command = "operserv/forbid"; permission = "operserv/forbid"; }
 
/*
 * os_ignore 
 *
 * 提供命令 operserv/ignore.
 *
 * 用于让服务忽略用户.
 */
module { name = "os_ignore" }
command { service = "OperServ"; name = "IGNORE"; command = "operserv/ignore"; permission = "operserv/ignore"; }
 
/*
 * os_info 
 *
 * 提供命令 operserv/info.
 *
 * 用于为用户和频道添加仅管理员可见的注释.
 */
module { name = "os_info" }
command { service = "OperServ"; name = "INFO"; command = "operserv/info"; permission = "operserv/info"; }
 
/*
 * os_jupe 
 *
 * 提供命令 operserv/jupe.
 *
 * 用于断开服务器与网络的连接, 并阻止其重新链接.
 */
module { name = "os_jupe" }
command { service = "OperServ"; name = "JUPE"; command = "operserv/jupe"; permission = "operserv/jupe"; }
 
/*
 * os_kick 
 *
 * 提供命令 operserv/kick.
 *
 * 用于将用户踢出频道.
 */
module { name = "os_kick" }
command { service = "OperServ"; name = "KICK"; command = "operserv/kick"; permission = "operserv/kick"; }
 
/*
 * os_kill 
 *
 * 提供命令 operserv/kill.
 *
 * 用于强制断开用户与网络的连接.
 */
module { name = "os_kill" }
command { service = "OperServ"; name = "KILL"; command = "operserv/kill"; permission = "operserv/kill"; }
 
/*
 * os_list 
 *
 * 提供命令 operserv/chanlist 和 operserv/userlist.
 *
 * 用于列出和搜索当前网络上的频道和用户.
 */
module { name = "os_list" }
command { service = "OperServ"; name = "CHANLIST"; command = "operserv/chanlist"; permission = "operserv/chanlist"; }
command { service = "OperServ"; name = "USERLIST"; command = "operserv/userlist"; permission = "operserv/userlist"; }
 
/*
 * os_login 
 *
 * 提供命令 operserv/login 和 operserv/logout.
 *
 * 用于登录 OperServ, 仅在你的管理员配置块要求时才需要.
 */
module { name = "os_login" }
command { service = "OperServ"; name = "LOGIN"; command = "operserv/login"; }
command { service = "OperServ"; name = "LOGOUT"; command = "operserv/logout"; }
 
/*
 * os_logsearch 
 *
 * 提供命令 operserv/logsearch.
 *
 * 用于搜索服务日志文件.
 */
module 
{
	name = "os_logsearch"
 
	/* 要搜索的日志文件名. 应配置一个 log{} 块来将日志写入此名称的文件. */
	logname = "services.log" 
}
command { service = "OperServ"; name = "LOGSEARCH"; command = "operserv/logsearch"; permission = "operserv/logsearch"; }
 
/*
 * os_mode 
 *
 * 提供命令 operserv/mode 和 operserv/umode.
 *
 * 用于更改用户和频道模式.
 */
module { name = "os_mode" }
command { service = "OperServ"; name = "UMODE"; command = "operserv/umode"; permission = "operserv/umode"; }
command { service = "OperServ"; name = "MODE"; command = "operserv/mode"; permission = "operserv/mode"; }
 
/*
 * os_modinfo 
 *
 * 提供命令 operserv/modinfo 和 operserv/modlist.
 *
 * 用于显示已加载模块的信息.
 */
module { name = "os_modinfo" }
command { service = "OperServ"; name = "MODINFO"; command = "operserv/modinfo"; permission = "operserv/modinfo"; }
command { service = "OperServ"; name = "MODLIST"; command = "operserv/modlist"; permission = "operserv/modinfo"; }
 
/*
 * os_module 
 *
 * 提供命令 operserv/modload, operserv/modreload, 和 operserv/modunload.
 *
 * 用于加载, 重载和卸载模块.
 */
module { name = "os_module" }
command { service = "OperServ"; name = "MODLOAD"; command = "operserv/modload"; permission = "operserv/modload"; }
command { service = "OperServ"; name = "MODRELOAD"; command = "operserv/modreload"; permission = "operserv/modload"; }
command { service = "OperServ"; name = "MODUNLOAD"; command = "operserv/modunload"; permission = "operserv/modload"; }
 
/*
 * os_news 
 *
 * 提供命令 operserv/logonnews, operserv/opernews, 和 operserv/randomnews.
 *
 * 用于配置用户连接时显示的新闻通知, 以及管理员登录时显示的新闻.
 */
module 
{
	name = "os_news"
 
	/*
	 * 用于在用户连接时发送新闻的服务机器人名称, 以及管理员登录时发送新闻的服务机器人名称.
	 */
	announcer = "Global"
	oper_announcer = "OperServ"
 
	/*
	 * 用户登录时显示的 LOGON/OPER 新闻条目数量.
	 *
	 * 此指令是可选的, 如果未设置, 默认值为 3.
	 */
	#newscount = 3 
}
command { service = "OperServ"; name = "LOGONNEWS"; command = "operserv/logonnews"; permission = "operserv/news"; }
command { service = "OperServ"; name = "OPERNEWS"; command = "operserv/opernews"; permission = "operserv/news"; }
command { service = "OperServ"; name = "RANDOMNEWS"; command = "operserv/randomnews"; permission = "operserv/news"; }
 
/*
 * os_noop 
 *
 * 提供命令 operserv/noop.
 *
 * 用于对服务器执行 NOOP, 这会阻止用户在该服务器上获取管理员权限.
 */
module { name = "os_noop" }
command { service = "OperServ"; name = "NOOP"; command = "operserv/noop"; permission = "operserv/noop"; }

/*
 * os_oline
 *
 * 提供命令 operserv/oline.
 *
 * 用于为用户设置操作员标志, 并且特定于 UnrealIRCd 3.2.
 * 有关更多信息, 请参见您的 IRCd 上的 /helpop ?svso.
 */
#module { name = "os_oline" }
#command { service = "OperServ"; name = "OLINE"; command = "operserv/oline"; permission = "operserv/oline"; }
 
/*
 * os_oper 
 *
 * 提供命令 operserv/oper.
 *
 * 用于配置操作员并显示有关操作员类型的信息.
 */
module { name = "os_oper" }
command { service = "OperServ"; name = "OPER"; command = "operserv/oper"; permission = "operserv/oper"; }
 
/*
 * os_reload
 *
 * 提供命令 operserv/reload.
 *
 * 用于重新加载 services.conf  配置文件.
 */
module { name = "os_reload" }
command { service = "OperServ"; name = "RELOAD"; command = "operserv/reload"; permission = "operserv/reload"; }
 
/*
 * os_session 
 *
 * 提供命令 operserv/exception 和 operserv/session.
 *
 * 此模块启用会话限制. 会话限制防止用户从同一 IP 同时连接超过一定次数 - 从而防止大多数类型的克隆.
 * 一旦主机达到其会话限制, 所有尝试从该主机连接的客户端将被杀死.
 * 默认会话限制的例外可以通过例外列表定义.
 *
 * 用于管理会话限制例外列表, 并查看当前活动会话.
 */
module
{
	name = "os_session"
 
	/*
	 * 每个主机的默认会话限制. 一旦主机达到其会话限制, 所有尝试从该主机连接的客户端将被杀死.
	 *
	 * 如果加载了 os_session, 则此指令是必需的.
	 */
	defaultsessionlimit = 3 
 
	/*
	 * 在例外中为主机设置的最大会话限制值.
	 *
	 * 如果加载了 os_session, 则此指令是必需的.
	 */
	maxsessionlimit = 100
 
	/*
	 * 设置会话例外的默认过期时间.
	 */
	#exceptionexpiry = 1d 
 
	/*
	 * 当用户因主机会话限制超出而被移除网络之前, 将通知用户的消息. 它可用于提供比简单"会话限制超出"更详细的杀死原因.
	 *
	 * 此指令是可选的, 如果未设置, 则不发送任何内容.
	 */
	sessionlimitexceeded = "The session limit for your IP %IP% has been exceeded."
 
	/*
	 * 与上述类似, 但用于提供网站地址, 用户可在此了解有关会话限制的更多信息及如何申请例外.
	 *
	 * 注意: 此指令已被故意注释掉, 以提醒您更改其包含的 URL. 建议您提供一个地址/URL, 供用户获取有关会话限制的帮助.
	 *
	 * 此指令是可选的, 如果未设置, 则不发送任何内容.
	 */
	#sessionlimitdetailsloc = "Please visit https://your.website.url/  for more information about session limits."
 
	/*
	 * 如果设置且不为 0, 此指令告诉服务在相同主机的后续杀死次数超过此值时添加 AKILL, 防止网络遭受 KILL 洪水攻击.
	 *
	 * 此指令是可选的.
	 */
	maxsessionkill = 15
 
	/*
	 * 为超出 maxsessionkill 指令限制的主机设置的 AKILL 过期时间.
	 *
	 * 此指令是可选的, 如果未设置, 默认为 30 分钟.
	 */
	sessionautokillexpiry = 30m 
 
	/*
	 * 设置用于确定哪些 IP 地址代表同一个人的 CIDR 值. 默认情况下, 这将限制每个 IPv4 IP 3 个连接和每个 IPv6 IP 3 个连接.
	 * 如果您遇到 IPv6 克隆攻击, 将 session_ipv6_cidr 设置为 64 或 48 可能有用.
	 */
	session_ipv4_cidr = 32 
	session_ipv6_cidr = 128 
}
command { service = "OperServ"; name = "EXCEPTION"; command = "operserv/exception"; permission = "operserv/exception"; }
command { service = "OperServ"; name = "SESSION"; command = "operserv/session"; permission = "operserv/session"; }
 
/*
 * os_set 
 *
 * 提供命令 operserv/set.
 *
 * 用于设置各种设置, 如超级管理员, 调试模式等.
 */
module 
{
	name = "os_set"
 
	/*
	 * 如果设置, 服务管理员将能够使用 SUPERADMIN [ON|OFF], 这将临时授予他们额外权限, 例如成为所有频道的创始人.
	 *
	 * 此指令是可选的.
	 */
	#superadmin = yes 
}
command { service = "OperServ"; name = "SET"; command = "operserv/set"; permission = "operserv/set"; }
 
/*
 * os_shutdown
 *
 * 提供命令 operserv/quit, operserv/restart, 和 operserv/shutdown.
 *
 * 用于退出, 重启或关闭服务.
 */
module { name = "os_shutdown" }
command { service = "OperServ"; name = "QUIT"; command = "operserv/quit"; permission = "operserv/quit"; }
command { service = "OperServ"; name = "RESTART"; command = "operserv/restart"; permission = "operserv/restart"; }
command { service = "OperServ"; name = "SHUTDOWN"; command = "operserv/shutdown"; permission = "operserv/shutdown"; }
 
/*
 * os_stats 
 *
 * 提供 operserv/stats 命令.
 *
 * 用于显示服务的统计信息.
 */
module { name = "os_stats" }
command { service = "OperServ"; name = "STATS"; command = "operserv/stats"; permission = "operserv/stats"; }
 
/*
 * os_svs 
 *
 * 提供命令 operserv/svsnick, operserv/svsjoin, 和 operserv/svspart.
 *
 * 用于强制用户更改昵称, 加入和离开频道.
 */
module { name = "os_svs" }
command { service = "OperServ"; name = "SVSNICK"; command = "operserv/svsnick"; permission = "operserv/svs"; }
command { service = "OperServ"; name = "SVSJOIN"; command = "operserv/svsjoin"; permission = "operserv/svs"; }
command { service = "OperServ"; name = "SVSPART"; command = "operserv/svspart"; permission = "operserv/svs"; }
 
/*
 * os_sxline 
 *
 * 提供 operserv/snline 和 operserv/sqline 命令.
 *
 * 用于禁止真实姓名, 昵称, 以及可能的频道.
 */
module { name = "os_sxline" }
command { service = "OperServ"; name = "SNLINE"; command = "operserv/snline"; permission = "operserv/snline"; }
command { service = "OperServ"; name = "SQLINE"; command = "operserv/sqline"; permission = "operserv/sqline"; }
 
/*
 * os_update 
 *
 * 提供 operserv/update 命令.
 *
 * 用于立即更新数据库.
 */
module { name = "os_update" }
command { service = "OperServ"; name = "UPDATE"; command = "operserv/update"; permission = "operserv/update"; }
