/*
 * [可选] 非核心模块 
 *
 * 以下块用于加载所有非核心模块 包括第三方模块 
 * 可以通过注释掉某行来阻止模块加载 也可以通过添加模块块来添加其他模块 
 * 这些模块将在连接到您的网络的服务之前加载 
 *
 * 注意 其中一些模块标记为EXTRA 并不包含在Debian软件包中 如果您想使用“额外”模块 请在Debian BTS上对anope提出愿望清单错误 
 */
 
/*
 * help 
 *
 * 提供命令generic/help 
 *
 * 这是一个通用的帮助命令 可用于任何客户端 
 */
module { name = "help" }
 
/*
 * m_dns 
 *
 * 增加对DNS协议的支持 单独使用时这个模块没有用处 
 * 但其他模块如m_dnsbl和os_dns需要这个 
 */
#module 
{
	name = "m_dns"
 
	/*
	 * 用于解析主机名的名称服务器 必须是IP或解析器配置文件 
	 * 下面的设置应该在所有类UNIX系统上都能正常工作 Windows用户需要从ipconfig /all中找到他们的名称服务器 
	 * 并将IP放在这里 
	 */
	nameserver = "/etc/resolv.conf" 
	#nameserver = "127.0.0.1"
 
	/*
	 * DNS查询超时前等待的秒数 
	 */
	timeout = 5 
 
 
	/* 如果您预计使用os_dns或其他方式回答DNS查询 请编辑以下内容  */
 
	/*
	 * 服务用于监听DNS查询的IP和端口 
	 * 注意 UNIX/Linux系统上小于1024的端口是有特权的 
	 * 并且需要Anope以root身份启动 如果您这样做 建议您 
	 * 设置options:user和options:group 以便Anope在绑定到此端口后可以更改用户 
	 */
	ip = "0.0.0.0"
	port = 53 
 
 
	/*
	 * SOA记录信息 
	 */
 
	/* DNS管理员的电子邮件地址  */
	admin = "admin@example.com" 
 
	/* 这应该是提供记录的公共面向名称服务器的名称  */
	nameservers = "ns1.example.com  ns2.example.com" 
 
	/* 从属服务器被允许缓存的时间 如果您希望记录更新得不太延迟 这应该相对较低 
	 */
	refresh = 3600 
 
	/* 一个通知块 每个在'nameservers'中列出的名称服务器应该有一个 
	 */
	notify 
	{
		ip = "192.0.2.0"
		port = 53 
	}
}
 
/*
 * m_dnsbl 
 *
 * 允许配置可检查连接用户的DNS黑名单 如果用户在黑名单上 他们将被立即禁止 这是防止机器人攻击的关键模块 
 */
#module 
{
	name = "m_dnsbl"
 
	/*
	 * 如果设置 服务将在连接到其上联时检查客户端与DNSBL 
	 * 这不推荐使用 在大型网络上会打开大量DNS查询 
	 * 虽然服务不会因此受到严重影响 但您的名称服务器/DNSBL可能会介意 
	 */
	check_on_connect = no 
 
	/*
	 * 如果设置 服务在从网络分裂回来时会检查客户端 这可能会一次性打开大量DNS查询 虽然服务不会因此受到严重影响 但您的名称服务器/DNSBL 
	 * 可能会介意 
	 */
	check_on_netburst = no 
 
	/*
	 * 如果设置 OperServ将把在DNSBL中找到的客户端添加到akill列表中 没有它 OperServ只是向IRCd发送一个定时G/K-line并忘记它 如果您的akill列表被机器人填满 这会很有用 
	 */
	add_to_akill = yes 
 
	blacklist 
	{
		/* 黑名单名称  */
		name = "rbl.efnetrbl.org" 
 
		/* 设置禁令的时间  */
		time = 4h 
 
		/* akill的原因 
		 * %n是用户的昵称 
		 * %u是用户的ident/用户名 
		 * %g是用户的真实姓名 
		 * %h是用户的主机名 
		 * %i是用户的IP 
		 * %r是回复原因(下面配置) 如果没有配置 则为空 
		 * %N是在networkinfo:networkname中设置的网络名称 
		 */
		reason = "您被列入EFnet RBL 请访问https://rbl.efnetrbl.org/?i=%i 获取信息"
 
		/* 禁止回复及其原因 如果没有配置回复 则所有回复都会被禁止  */
		reply 
		{
			code = 1 
			reason = "开放代理"
		}
 
		#reply 
		{
			code = 2 
			reason = "spamtrap666"
		}
 
		#reply 
		{
			code = 3 
			reason = "spamtrap50"
		}
 
		reply 
		{
			code = 4 
			reason = "TOR"
 
			/*
			 * 如果设置 服务在结果返回时识别出的用户将不会被禁止 
			 */
			#allow_account = yes 
		}
 
		reply 
		{
			code = 5 
			reason = "无人机/洪水攻击"
		}
	}
 
	#blacklist 
	{
		name = "dnsbl.dronebl.org" 
		time = 4h 
		reason = "您的主机在DroneBL中被列入黑名单 更多信息 请访问https://dronebl.org/lookup_branded?ip=%i&network=%N" 
	}
 
	/* 免除localhost的DNSBL检查 */
	exempt { ip = "127.0.0.0/8" }
}
 
/*
 * m_helpchan 
 *
 * 给予在指定帮助频道中拥有op权限的用户usermode +h (helpop) 
 */
#module 
{
	name = "m_helpchan"
 
	helpchannel = "#help"
}

/*
 * m_httpd 
 *
 * 允许服务提供网页 单独使用时 这个模块没有用处 
 *
 * 注意使用这个会允许用户获取您服务的IP地址 
 * 为了防止这种情况 我们推荐使用反向代理或隧道 
 */
#module 
{
	name = "m_httpd"
 
	httpd 
	{
		/* 此服务的名称  */
		name = "httpd/main"
 
		/* 要监听的IP地址  */
		ip = "0.0.0.0"
 
		/* 要监听的端口  */
		port = 8080 
 
		/* 此服务器连接超时的时间  */
		timeout = 30 
 
		/* 使用SSL监听 需要SSL模块  */
		#ssl = yes 
 
		/* 如果您使用发送下面设置的extforward_headers之一的反向代理 
		 * 将此设置为它的IP地址 
		 * 这允许服务通过读取转发的-for HTTP头获取用户的真实IP 
		 * 可以指定多个IP地址 用空格分隔 
		 */
		#extforward_ip = "192.168.0.255 192.168.1.255"
 
		/* 要查找的头部 这些可能原样就能工作  */
		extforward_header = "X-Forwarded-For Forwarded-For"
	}
}
 
/*
 * m_ldap [EXTRA]
 *
 * 此模块允许其他模块使用LDAP 单独使用时 这个模块没有用处 
 */
#module 
{
	name = "m_ldap"
 
	ldap 
	{
		server = "ldap://127.0.0.1"
 
		/*
		 * 用于执行搜索和添加用户的管理员凭据 
		 */
		admin_binddn = "cn=Manager,dc=anope,dc=org"
		admin_password = "secret"
	}
}
 
/*
 * m_ldap_authentication [EXTRA]
 *
 * 此模块允许许多命令(如IDENTIFY、RELEASE、RECOVER、GHOST等)使用 
 * LDAP来验证用户 需要m_ldap 
*/
#module 
{
	name = "m_ldap_authentication"
 
	/*
	 * 用于搜索用户账户的可区分名称 
	 */
	basedn = "ou=users,dc=anope,dc=org"
 
	/*
	 * 用于查找用户账户的搜索过滤器 
	 * %account会被替换为用户账户 
	 * %object_class会被替换为下面配置的对象类 
	 */
	search_filter = "(&(uid=%account)(objectClass=%object_class))"
 
	/*
	 * LDAP用来存储用户账户信息的对象类 
	 * 如果允许注册 这用于向LDAP添加新用户 
	 */
	object_class = "anopeUser"
 
	/*
	 * 用于账户名称的属性值 
	 */
	username_attribute = "uid"
 
	/*
	 * 用于电子邮件地址的属性值 
	 * 这个指令是可选的 
	 */
	email_attribute = "email"
 
	/*
	 * 用于密码的属性值 
	 * 在LDAP中注册新账户时使用 
	 */
	password_attribute = "userPassword"
 
	/*
	 * 如果设置 这是给那些尝试使用NickServ注册的用户(包括分组注册昵称)的原因 
	 *
	 * 如果未设置 则注册不会被阻止 
	 */
	#disable_register_reason = "要在本网络上注册请访问https://some.misconfigured.site/register" 
 
	/*
	 * 如果设置 这是给那些尝试“/msg NickServ SET EMAIL”的用户的原因 
	 * 如果未设置 则更改电子邮件地址不会被阻止 
	 */
	#disable_email_reason = "要更改您的电子邮件地址请访问https://some.misconfigured.site" 
}
 
/*
 * m_ldap_oper [EXTRA]
 *
 * 此模块通过LDAP组成员身份动态将用户与Anope操作类型绑定 
 * 需要m_ldap 
 *
 * 注意这不会给用户在IRCd上的特权 只在服务中有 
 */
#module 
{
	name = "m_ldap_oper"
 
	/*
	 * 搜索组时使用的可选binddn 
	 * %a会被替换为用户账户名 
	 */
	#binddn = "cn=Manager,dc=anope,dc=org"
 
	/*
	 * 绑定时使用的可选密码 
	 */
	#password = "secret"
 
	/*
	 * 组所在的基DN 
	 */
	basedn = "ou=groups,dc=anope,dc=org"
 
	/*
	 * 搜索用户时使用的过滤器 
	 * %a会被替换为用户账户名 
	 */
	filter = "(member=uid=%a,ou=users,dc=anope,dc=org)"
 
	/*
	 * 表示操作类型名称的组属性 
	 * cn属性应与配置中的已知操作类型匹配 
	 */
	opertype_attribute = "cn"
}
 
/*
 * m_mysql [EXTRA]
 *
 * 此模块允许其他模块使用MySQL 
 */
#module 
{
	name = "m_mysql"
 
	mysql 
	{
		/* 此服务的名称  */
		name = "mysql/main"
		database = "anope"
		server = "127.0.0.1"
		username = "anope"
		password = "mypassword"
		port = 3306 
	}
}
 
/*
 * m_redis 
 *
 * 此模块允许其他模块使用Redis 
 */
#module 
{
	name = "m_redis"
 
	/* 一个redis数据库 */
	redis 
	{
		/* 此服务的名称 */
		name = "redis/main"
 
		/*
		 * 要使用的redis数据库 新连接默认为0 
		 */
		db = 0 
 
		ip = "127.0.0.1"
		port = 6379 
	}
}
 
/*
 * m_regex_pcre [EXTRA]
 *
 * 提供正则表达式引擎regex/pcre 它使用Perl兼容正则表达式库的第1版 
 * 此模块不能与m_regex_pcre2模块同时加载 
 */
#module { name = "m_regex_pcre" }
 
/*
 * m_regex_pcre2 [EXTRA]
 *
 * 提供正则表达式引擎regex/pcre 它使用Perl兼容正则表达式库的第2版 
 * 此模块不能与m_regex_pcre模块同时加载 
#module { name = "m_regex_pcre2" }
 
/*
 * m_regex_posix [EXTRA]
 *
 * 提供正则表达式引擎regex/posix 它使用POSIX兼容的正则表达式 
 * 这可能是您唯一不需要额外库的正则表达式模块 
 */
#module { name = "m_regex_posix" }
 
/*
 * m_regex_tre [EXTRA]
 *
 * 提供正则表达式引擎regex/tre 它使用TRE正则表达式库 
 */
#module { name = "m_regex_tre" }

/*
 * m_rewrite 
 *
 * 允许重写发送/来自客户端的命令 
 */
#module { name = "m_rewrite" }
#command 
{
	service = "ChanServ"; name = "CLEAR"; command = "rewrite"
 
	/* 启用m_rewrite  */
	rewrite = true 
 
	/* 要匹配的源消息 $可用于匹配任何内容  */
	rewrite_source = "CLEAR $ USERS"
 
	/*
	 * 要重写源消息的消息 $后跟一个数字 例如$0 会被 
	 * 从源消息中第0个单词开始替换 
	 */
	rewrite_target = "KICK $1 *"
 
	/*
	 * 命令描述 这仅在HELP的输出中显示 
	 * 注释此选项以防止命令在 
	 * HELP命令中显示 
	 */
	rewrite_description = "清除频道中的所有用户"
}
 
/*
 * m_proxyscan 
 *
 * 此模块允许您扫描连接客户端的开放代理 
 * 注意使用这个会允许用户获取您服务的IP地址 
 *
 * 目前支持两种代理类型: HTTP和SOCKS5 
 *
 * 代理扫描器通过在客户端连接到网络时尝试连接它们来工作 
 * 如果他们运行着代理 则指示它回连到服务 如果服务能够通过代理连接到自身 
 * 那么它就知道这是一个不安全的代理 并会禁止它 
 */
#module 
{
	name = "m_proxyscan"
 
	/*
	 * 目标IP服务告诉代理回连到 这必须是一个公开可用的IP 
	 * 远程代理可以连接 
	 */
	#target_ip = "127.0.0.1"
 
	/*
	 * 服务告诉代理连接的端口 
	 */
	target_port = 7226 
 
	/*
	 * 服务监听可疑代理传入连接的IP 
	 * 这很可能与target_ip相同 但如果您位于防火墙(NAT)后面可能不是 
	 */
	#listen_ip = "127.0.0.1"
 
	/*
	 * 服务应该监听可疑代理传入连接的端口 
	 * 这很可能与target_port相同 
	 */
	listen_port = 7226 
 
	/*
	 * 连接时发送给客户端的可选通知 
	 */
	#connect_notice = "我们现在将扫描您的主机是否有不安全的代理 如果您不同意此次扫描 请立即断开连接 "
 
	/*
	 * 通知应该发送自谁 
	 */
	#connect_source = "OperServ"
 
	/*
	 * 如果设置 OperServ会将受感染的客户端添加到akill列表 没有它 OperServ只是简单地发送 
	 * 一个定时G/K-line到IRCd然后忘记它 如果您的akill列表被机器人填满 这会很有用 
	 */
	add_to_akill = yes 
 
	/*
	 * 连接应该超时的时间 
	 */
	timeout = 5 
 
	proxyscan 
	{
		/* 要检查的代理类型 允许逗号分隔的列表  */
		type = "HTTP"
 
		/* 要检查的端口  */
		port = "80,8080"
 
		/* 设置禁令的时间  */
		time = 4h 
 
		/*
		 * 禁止用户的原因 
		 * %h会被替换为发现的代理类型 
		 * %i会被替换为发现的代理IP 
		 * %p会被替换为端口 
		 */
		reason = "您的主机上运行着开放代理 (%t:%i:%p)"
	}
}
 
/*
 * m_sasl 
 *
 * 一些IRCd允许“SASL”认证 让用户在IRCd用户注册过程中向服务识别 
 * 
 * 如果加载此模块 服务将允许通过此机制验证用户 支持的机制是: 
 * PLAIN, EXTERNAL 
 */
module { name = "m_sasl" }
 
/*
 * m_ssl_gnutls [EXTRA]
 *
 * 此模块使用GnuTLS为Anope提供SSL服务 例如 
 * 通过SSL连接到上联服务器 
 *
 * 您只能加载m_ssl_gnutls或m_ssl_openssl 但不能同时加载两者 
 */
#module 
{
	name = "m_ssl_gnutls"
 
	/*
	 * m_ssl_gnutls提供给上联的可选证书和密钥 
	 *
	 * 您可以使用以下命令生成自己的证书和密钥对: 
	 *
	 *   certtool --generate-privkey --bits 2048 --outfile anope.key  
	 *   certtool --generate-self-signed --load-privkey anope.key  --outfile anope.crt  
	 *
	 */
	cert = "data/anope.crt" 
	key = "data/anope.key" 
 
	/*
	 * 当作为服务器时使用的Diffie-Hellman参数 这仅 
	 * 对于希望使用临时DH密码套件的TLS服务器是必需的 
	 *
	 * 这对于Anope通过SSL连接到上联服务器来说不是必需的 
	 *
	 * 您可以使用以下命令生成DH参数: 
	 *
	 *   certtool --generate-dh-params --bits 2048 --outfile dhparams.pem  
	 *
	 */
#	dhparams = "data/dhparams.pem" 
}

/*
 * m_ssl_openssl [EXTRA]
 *
 * 此模块使用OpenSSL为Anope提供SSL服务 例如 
 * 通过SSL连接到上联服务器 
 *
 * 您只能加载m_ssl_openssl或m_ssl_gnutls 但不能同时加载两者 
 *
 */
#module 
{
	name = "m_ssl_openssl"
 
	/*
	 * m_ssl_openssl提供给上联的可选证书和密钥 
	 *
	 * 您可以使用以下命令生成自己的证书和密钥对: 
	 *
	 *   openssl genrsa -out anope.key  2048 
	 *   openssl req -new -x509 -key anope.key  -out anope.crt  -days 1095 
	 */
	cert = "data/anope.crt" 
	key = "data/anope.key" 
 
	/*
	 * 从2014年起 SSL 3.0被认为是不安全的 但出于兼容性原因 
	 * 一些系统默认可能会启用它 
	 * 您可以使用以下选项明确启用或禁用它 
	 * 不设置此选项 默认为系统的默认行为 
	 */
	#sslv3 = no 
}
 
/*
 * m_sql_authentication [EXTRA]
 *
 * 此模块允许使用自定义查询针对外部SQL数据库验证用户 
 */
#module 
{
	name = "m_sql_authentication"
 
	/* 要使用的SQL引擎 应在其他地方使用m_mysql、m_sqlite等进行配置 
	 */
	engine = "mysql/main"
 
	/* 要执行的查询以进行验证 此查询的非空结果被视为成功 
	 * 用户将被验证 
	 *
	 * @a@将被替换为用户账户名 
	 * @p@将被替换为用户密码 
	 * @n@将被替换为用户昵称 
	 * @i@将被替换为用户IP 
	 *
	 * 请注意 在正常nickserv/identify命令之外的情况下 例如通过Web面板进行身份验证时 
	 * @n@和@i@可能始终不存在 
	 *
	 * 此外 如果此查询返回名为email的字段 则将用户的电子邮件设置为其值 
	 *
	 *
	 * 我们为一些流行的网站/论坛系统包含了一些示例查询 
	 *
	 * Drupal 6: "SELECT `mail` AS `email` FROM `users` WHERE `name` = @a@ AND `pass` = MD5(@p@) AND `status` = 1"
	 * e107 cms: "SELECT `user_email` AS `email` FROM `e107_user` WHERE `user_loginname` = @a@ AND `user_password` = MD5(@p@)"
	 * SMF Forum: "SELECT `email_address` AS `email` FROM `smf_members` WHERE `member_name` = @a@ AND `passwd` = SHA1(CONCAT(LOWER(@a@), @p@))"
	 * vBulletin: "SELECT `email` FROM `user` WHERE `username` = @a@ AND `password` = MD5(CONCAT(MD5(@p@), `salt`))"
	 * IP.Board: "SELECT `email` FROM `ibf_members` WHERE `name` = @a@ AND `members_pass_hash` = MD5(CONCAT(MD5(`members_pass_salt`), MD5(@p@)))"
	 */
	query = "SELECT `email_addr` AS `email` FROM `my_users` WHERE `username` = @a@ AND `password` = MD5(CONCAT('salt', @p@))"
 
	/*
	 * 如果设置 这是给那些尝试“/msg NickServ REGISTER”的用户的原因 
	 * 如果未设置 则注册不会被阻止 
	 */
	#disable_reason = "要在本网络上注册请访问https://some.misconfigured.site/register" 
 
	/*
	 * 如果设置 这是给那些尝试“/msg NickServ SET EMAIL”的用户的原因 
	 * 如果未设置 则更改电子邮件地址不会被阻止 
	 */
	#disable_email_reason = "要更改您的电子邮件地址请访问https://some.misconfigured.site" 
}
 
/*
 * m_sql_log [EXTRA]
 *
 * 此模块为log{}块添加了一个额外的目标选项 
 * 允许将Service的日志记录到SQL中 要记录到SQL 请在log:targets前加上sql_log: 例如: 
	 *
	 * log 
	 * {
	 *     targets = "services.log  sql_log:mysql/main"
	 *     ...
	 * }
	 *
	 * 默认情况下 此模块将日志记录到`logs`表 并且如果不存在则会创建它 
	 * 此模块不在表上创建任何索引(键) 建议您根据需要自行添加它们 
	 */
#module { name = "m_sql_log" }
 
/*
 * m_sql_oper [EXTRA]
 *
 * 此模块允许基于外部SQL数据库使用自定义查询授予用户服务操作员特权 并可能授予IRC操作员 
 * 特权 
 */
#module 
{
	name = "m_sql_oper"
 
	/* 要使用的SQL引擎 应在其他地方使用m_mysql、m_sqlite等进行配置 
	 */
	engine = "mysql/main"
 
	/* 要执行的查询以确定用户是否应具有操作员特权 
	 * 必须返回名为opertype的字段才能将用户与其操作类型关联 
	 * 操作类型必须在services.conf 中提前配置 
	 *
	 * 如果此查询返回名为modes的字段 则会为用户设置这些模式 
	 * 否则 只会发送简单的+o 
	 *
	 * @a@将被替换为用户账户名 
	 * @i@将被替换为用户IP 
	 */
	query = "SELECT `opertype` FROM `my_users` WHERE `user_name` = @a@"
}
 
/*
 * m_sqlite [EXTRA]
 *
 * 此模块允许其他模块使用SQLite 
 */
#module 
{
	name = "m_sqlite"
 
	/* 一个SQLite数据库 */
	sqlite 
	{
		/* 此服务的名称  */
		name = "sqlite/main"
 
		/* 数据库名称 如果不存在则会创建  */
		database = "anope.db" 
	}
}
 
/*
 * m_xmlrpc 
 *
 * 允许远程应用程序(网站)实时执行查询以从Anope检索数据 
 * 单独使用时 此模块没有用处 但允许其他模块(m_xmlrpc_main)接收和发送XMLRPC查询 
 */
#module 
{
	name = "m_xmlrpc"
 
	/* 要使用的Web服务 需要m_httpd  */
	server = "httpd/main"
}
 
/*
 * m_xmlrpc_main 
 *
 * 添加主要的XMLRPC核心功能 
 * 需要m_xmlrpc 
 */
#module { name = "m_xmlrpc_main" }