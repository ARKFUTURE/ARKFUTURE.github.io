# MPD的配置文件示例.
# 阅读用户手册以获取文档: http://www.musicpd.org/doc/user/
# 或 /usr/share/doc/mpd/html/user.html
# USE UTF-8


# 文件和目录#######################################################
#
# 此设置控制MPD将搜索以发现的顶部目录可用的音频文件
# 并将它们添加到守护进程的在线数据库中
# 
# 
# 
# 
#
music_directory		"/var/lib/mpd/music"
#
# 此设置设置MPD内部播放列表目录
# 这样做的目的目录是MPD创建的播放列表的存储区.
# 
# 
#
playlist_directory		"/var/lib/mpd/playlists"
#
# 此设置设置MPD数据库的位置
# 此文件用于在服务器启动时加载数据库并存储数据库
# 
# 
# 
#
db_file			"/var/lib/mpd/tag_cache"

# T这些设置是守护程序的守护程序日志文件的位置.
#
# 特殊值 "syslog" 使MPD使用本地syslog守护进程. 
# 这将默认设置为将日志记录到syslog.
#
# #如果使用systemd, 请不要配置 log_file. 带systemd, MPD
# 默认为systemd日记账, 这很好
#
#log_file			"/var/log/mpd/mpd.log"

#此设置设置存储进程ID的文件的位置
# 以使用mpd-kill和一些init脚本。此设置被禁用
# 默认情况下，不会存储pid文件
#
# 如果使用systemd，请不要配置pid_file
#
#pid_file			"/run/mpd/pid"

# 此设置设置包含以下信息的文件的位置
# 使MPD恢复到以前的大致形状的大多数变量
# 它被推倒了。默认情况下禁用此设置，并且服务器
# 状态将在服务器启动时重置.
#
state_file			"/var/lib/mpd/state"
#
# 贴纸数据库的位置.  这是一个数据库管理附加到歌曲的动态信息
# 
#
sticker_file                   "/var/lib/mpd/sticker.sql"
#
###############################################################################


# 常规音乐守护程序选项################################################
#
# 此设置指定MPD将作为其运行的用户. 
# MPD永远不应该作为ROOT,您可以使用此设置使MPD在之后更改其用户ID初始化
# 默认情况下禁用此设置,MPD作为当前用户
# 
#
#user				"mpd"
#
# 此设置指定MPD将作为其运行的组
# 
# 
# 
#
#group				"nogroup"
#
# 此设置设置要侦听的守护程序的地址.
# 
# 
# 
#
# 对于网络
bind_to_address			"0.0.0.0"
#
# 对于Unix套接字
#bind_to_address		"/run/mpd/socket"
#
# 此设置是要为守护程序分配的TCP端口
# 到
#
port				"6600"
#
# 抑制所有低于给定阈值的消息  使用“详细”进行故障排除。
#  可用的设置参数有 "notice", "info", "verbose","warning" and "error".
# 
#
#log_level			"notice"
#
# 将 "restore_paused" 设置为 "yes" 会使MPD进入暂停模式启动后开始播放
# 
#
#restore_paused "no"
#
# 此设置使MPD能够以其他音乐播放器可用的格式创建播放列表
# 
#
#save_absolute_paths_in_playlists	"no"
#
# 此设置定义了将在音频文件发现过程中提取的标记类型列表
# The complete list of possible values can be
# 
#metadata_to_use	"artist,album,title,track,name,genre,date,composer,performer,disc"
#
# 此示例仅启用 "comment" 而不禁用所有其他支持的标签:
# 
#metadata_to_use "+comment"
#
# 此设置允许在music_directory中的文件更改时自动更新MPD的数据库
# 
#
auto_update	"yes"
#
# 限制正在监视的目录的深度, 0表示仅监视音乐目录本身
# 
#
#auto_update_depth "0"
#
###############################################################################


# 符号链接行为######################################################
#
# 如果此设置设置为 "yes", MPD将通过以下方式发现音频文件
# symbolic links outside of the configured music_directory(配置的music_directory之外的符号链接).
#
#follow_outside_symlinks	"yes"
#
# 如果此设置设置为 "yes", MPD将通过以下方式发现音频文件
# symbolic links inside of the configured music_directory(配置的music_directory内的符号链接).
#
#follow_inside_symlinks		"yes"
#
###############################################################################


# Zeroconf/Avahi服务发现 ##########################################
#
# 如果此设置设置为 "yes", 则服务信息将通过Zeroconf / Avahi.
# 
#
zeroconf_enabled		"yes"
#
# 此设置的参数将是的Zeroconf/Avahi唯一名称
# 网络上的此MPD服务器。%h将替换为主机名.
#
zeroconf_name			"ARKFUTURE MPD Server @ %h"
#
###############################################################################


# 权限#################################################################
#
# 如果设置了此设置，MPD将需要密码授权. 
# 可以为不同的密码配置文件多次指定设置
#
password                        "P03iZjRtmpqXPv3@read,add,control,admin"
#
# This setting specifies the permissions a user has who has not yet logged in.
#
default_permissions             "read,add,control,admin"
#
###############################################################################


# 数据库 #######################################################################
#
# An example of a database section instead of the old 'db_file' setting.
# It enables mounting other storages into the music directory.
#
#database {
#       plugin "simple"
#       path "/var/lib/mpd/tag_cache"
#       cache_directory "/var/lib/mpd/cache"
#}
#
# An example of database config for a satellite setup
#
#music_directory "nfs://fileserver.local/srv/mp3"
#database {
#       plugin "proxy"
#       host "other.mpd.host"
#       port "6600"
#}

# 输入 #######################################################################
#
input {
        plugin "curl"
#       proxy "proxy.isp.com:8080"
#       proxy_user "user"
#       proxy_password "password"
}

# 解码器 #####################################################################
#

decoder {
        plugin                  "hybrid_dsd"
        enabled                 "no"
#       gapless                 "no"
}
decoder {
        plugin        "wildmidi"
        enabled       "no"
        #config_file "/etc/timidity/timidity.cfg"
}

#
###############################################################################

# 音频输出################################################################
#
# MPD supports various audio output types, as well as playing through multiple
# audio outputs at the same time, through multiple audio_output settings
# blocks. Setting this block is optional, though the server will only attempt
# autodetection for one sound card.
#
# An example of an ALSA output:
#
#audio_output {
#	type		"alsa"
#	name		"My ALSA Device"
##	device		"hw:0,0"	# optional
##	mixer_type      "hardware"	# optional
##	mixer_device	"default"	# optional
##	mixer_control	"PCM"		# optional
##	mixer_index	"0"		# optional
#}
#
# An example of an OSS output:
#
#audio_output {
#	type		"oss"
#	name		"My OSS Device"
##	device		"/dev/dsp"	# optional
##	mixer_type      "hardware"	# optional
##	mixer_device	"/dev/mixer"	# optional
##	mixer_control	"PCM"		# optional
#}
#
# An example of a shout output (for streaming to Icecast):
#
#audio_output {
#	type		"shout"
#	encoder		"vorbis"		# optional
#	name		"My Shout Stream"
#	host		"localhost"
#	port		"8000"
#	mount		"/mpd.ogg"
#	password	"hackme"
#	quality		"5.0"
#	bitrate		"128"
#	format		"44100:16:1"
##	protocol	"icecast2"		# optional
##	user		"source"		# optional
##	description	"My Stream Description"	# optional
##	url		"http://example.com"	# optional
##	genre		"jazz"			# optional
##	public		"no"			# optional
##	timeout		"2"			# optional
##	mixer_type      "software"		# optional
#}
#
# An example of a recorder output:
#
#audio_output {
#	type		"recorder"
#	name		"My recorder"
#	encoder		"vorbis"		# optional, vorbis or lame
#	path		"/var/lib/mpd/recorder/mpd.ogg"
##	quality		"5.0"			# do not define if bitrate is defined
#	bitrate		"128"			# do not define if quality is defined
#	format		"44100:16:1"
#}
#
# An example of a httpd output (built-in HTTP streaming server):
#
#audio_output {
#	type		"httpd"
#	name		"My HTTP Stream"
#	encoder		"vorbis"		# optional, vorbis or lame
#	port		"8000"
#	bind_to_address	"0.0.0.0"		# optional, IPv4 or IPv6
##	quality		"5.0"			# do not define if bitrate is defined
#	bitrate		"128"			# do not define if quality is defined
#	format		"44100:16:1"
#	max_clients	"0"			# optional 0=no limit
#}
#
# An example of a pulseaudio output (streaming to a remote pulseaudio server)
# Please see README.Debian if you want mpd to play through the pulseaudio
# daemon started as part of your graphical desktop session!
#
#audio_output {
#	type		"pulse"
#	name		"My Pulse Output"
##	server		"remote_server"		# optional
##	sink		"remote_server_sink"	# optional
##	media_role	"media_role"		#optional
#}
#
# An example of a winmm output (Windows multimedia API).
#
#audio_output {
#	type		"winmm"
#	name		"My WinMM output"
##	device		"Digital Audio (S/PDIF) (High Definition Audio Device)" # optional
#		or
##	device		"0"		# optional
##	mixer_type	"hardware"	# optional
#}
#
# An example of an openal output.
#
#audio_output {
#	type		"openal"
#	name		"My OpenAL output"
##	device		"Digital Audio (S/PDIF) (High Definition Audio Device)" # optional
#}
#
# An example of an sndio output.
#
#audio_output {
#	type		"sndio"
#	name		"sndio output"
#	mixer_type	"hardware"
#}
#
# An example of an OS X output:
#
#audio_output {
#	type		"osx"
#	name		"My OS X Device"
##	device		"Built-in Output"	# optional
##	channel_map      "-1,-1,0,1"	# optional
#}
#
## Example "pipe" output:
#
#audio_output {
#	type		"pipe"
#	name		"my pipe"
#	command		"aplay -f cd 2>/dev/null"
## Or if you're want to use AudioCompress
#	command		"AudioCompress -m | aplay -f cd 2>/dev/null"
## Or to send raw PCM stream through PCM:
#	command		"nc example.org 8765"
#	format		"44100:16:2"
#}
#
## An example of a null output (for no audio output):
#
#audio_output {
#	type		"null"
#	name		"My Null Output"
#	mixer_type      "none"			# optional
#}
#
###############################################################################


# 归一化自动音量调整 ##################################
#
# This setting specifies the type of ReplayGain to use. This setting can have
# the argument "off", "album", "track" or "auto". "auto" is a special mode that
# chooses between "track" and "album" depending on the current state of
# random playback. If random playback is enabled then "track" mode is used.
# See <https://wiki.hydrogenaud.io/index.php?title=Replaygain> for
# more details about ReplayGain.
# This setting is off by default.
#
#replaygain			"album"
#
# This setting sets the pre-amp used for files that have ReplayGain tags. By
# default this setting is disabled.
#
#replaygain_preamp		"0"
#
# This setting sets the pre-amp used for files that do NOT have ReplayGain tags.
# By default this setting is disabled.
#
#replaygain_missing_preamp	"0"
#
# This setting enables or disables ReplayGain limiting.
# MPD calculates actual amplification based on the ReplayGain tags
# and replaygain_preamp / replaygain_missing_preamp setting.
# If replaygain_limit is enabled MPD will never amplify audio signal
# above its original level. If replaygain_limit is disabled such amplification
# might occur. By default this setting is enabled.
#
#replaygain_limit		"yes"
#
# This setting enables on-the-fly normalization volume adjustment. This will
# result in the volume of all playing audio to be adjusted so the output has
# equal "loudness". This setting is disabled by default.
#
#volume_normalization		"no"
#
###############################################################################

# 字符编码 ##########################################################
#
# If file or directory names do not display correctly for your locale then you
# may need to modify this setting.
#
filesystem_charset		"UTF-8"
#
###############################################################################
