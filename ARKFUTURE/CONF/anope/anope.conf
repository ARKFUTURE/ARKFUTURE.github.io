 /*
 * 示例配置文件 Anope. 对此文件进行适当更改后, 将其放置在anope的配置文件中
 * 并修改为anope.conf 此配置文件提供给Anope 2.1.7
 *
 *
 *
 * 这个文件的格式相当简单:有三种注释形式可以使用:
 *  - 像使用 '#' 注释类似shell的注释
 *  - 像使用 '//' 类似c++的注释
 *  - 或者使用c的注释
 *
 * 除了三种注释外,我们还支持三种结构: blocks(块), keys(键), 和 values(值)
 *
 * 一个 block 是一个命名容器, 其中包含多个keys(键值对)
 * - 你可以把它看作是一个数组
 *
 * 一个块如:
 * foobar
 * {
 *    moo = "cow"
 *    foo = bar
 * }
 *
 * 请注意,允许使用匿名块,并且通常与注释一起使用,以便轻松注释整个块
 * for example:
 * #foobar
 * {
 *    moo = "cow"
 *    foo = bar
 * }
 * 这是一个注释的块.
 *
 * 按键不区分大小写. Values depend on what key - generally, information is
 * given in the key comment. The quoting of values (and most other syntax) is quite
 * flexible, however, please do not forget to quote your strings:
 *
 *   "This is a parameter string with spaces in it"
 *
 * If you need to include a double quote inside a quoted string, precede it
 * by a backslash:
 *
 *   "This string has \"double quotes\" in it"
 *
 * Time parameters can be specified either as an integer representing a
 * number of seconds (e.g. "3600" = 1 hour), or as an integer with a unit
 * specifier: "s" = seconds, "m" = minutes, "h" = hours, "d" = days.
 * Combinations (such as "1h30m") are not permitted. Examples (all of which
 * represent the same length of time, one day):
 *
 *   "86400", "86400s", "1440m", "24h", "1d"
 *
 * 在每个指令的文档中, 将包括以下内容之一, 以指示是否需要选项
 * 
 *
 *
 * [REQUIRED]
 *     指示一个必须给出的指令, 否则服务器将不会启动.
 *     
 *
 * [RECOMMENDED]
 *     表示可以省略的指令, 但省略它可能会导致不良的副作用.
 *      
 *
 * [OPTIONAL]
 *     表示一个可选的指令. 如果没有给出, 该功能通常会被禁用
 *     如果不是这样, 更多信息将在文档中给出.
 *     
 *
 * [DISCOURAGED]
 *     表示如果指定,可能会导致不良副作用的指令
 *     
 *
 * [DEPRECATED]
 *     指示将在未来版本中消失的指令
 *     通常是因为它的功能要么被其他指令的功能所取代,要么被合并到主程序中
 *     
 *     
 */

/*
 * [OPTIONAL] Defines
 *
 * 您可以将值定义为其他值, 这可用于一次轻松更改配置中的许多值.
 * 
 */

/*
 * stats.host 定义在整个配置中用于stats客户端主机名的多个不同位置
 */
define
{
	name = "stats.host"
	value = ""
}

/*
 * [OPTIONAL] Additional Includes
 *
 * 您可以在此处添加其他配置文件.
 * 您还可以包含可执行文件, 它将被执行, 其输出将包含在您的配置中.
 * 
 */

#include
{
	type = "file"
	name = "some.conf"
}

#include
{
	type = "executable"
	name = "/usr/bin/wget -q -O - https://some.misconfigured.network.com/stats.conf"
}

/*
 * [REQUIRED] IRCd Config
 *
 * 本节用于设置anope以连接到您的IRC网络.
 * 此部分可以多次包含, anope将尝试连接到每台服务器,直到它最终连接.
 * 
 *
 * 每个上行链路IRCD都应该有相应的配置,以允许anope链接到它.
 * 注:下面是不同IRCD的不同文件配置,所以请根据您的IRCD进行更改,下面的举例请写入您的IRCD配置文件中
 *
 * INSPIRCD 
 * 服务器信息配置如下:
 *
 *     # This goes in inspircd.conf, *NOT* your Anope config!
 *     <link name="stats.example.com"
 *           ipaddr="127.0.0.1"
 *           port="7000"
 *           sendpass="mypassword"
 *           recvpass="mypassword">
 *     <uline server="stats.example.com" silent="yes">
 *     <bind address="127.0.0.1" port="7000" type="servers">
 *
 * UnrealIRCd 
 * 服务器信息配置如下:
 *
 *     // This goes in unrealircd.conf, *NOT* your Anope config!
 *     listen {
 *         ip 127.0.0.1;
 *         port 7000;
 *         options {
 *             serversonly;
 *         };
 *     };
 *     link stats.example.com {
 *         incoming {
 *             mask *@127.0.0.1;
 *         };
 *         password "mypassword";
 *         class servers;
 *     };
 *     ulines { stats.example.com; };
 */



uplink
{
	/*
	 * 您希望连接Anope的IRC服务器的IP地址、主机名或UNIX socket路径。
	 * 
	 * 通常, 您需要连接 127.0.0.1 (本地主机地址).
	 *
	 * 注: 在某些shell提供程序上, 这不是一种选择.
	 */
	host = "127.0.0.1"

	/*
	 * Anope 连接到上行链路时应使用的协议. 
	 * 可以设置为 "ipv4" (默认值), "ipv6", 或者 "unix".
	 */
	protocol = "ipv4"

	/*
	 * 是否开启SSL.
	 * 您必须加载SSL模块才能正常工作
	 */
	ssl = no

	/*
	 * 要连接的端口.
	 * 你的IRCD服务器必须监听此端口并且同意服务器连接
	 * 
	 *
	 * 有关如何完成此操作 请参阅您的IRCD文档
	 */
	port = 7000

	/*
	 * 发送到ircd服务器进行身份验证的密码.
	 * 这必须与您的链接块匹配 IRCd.
	 *
	 * 有关如何完成此操作 请参阅您的IRCD文档
	 */
	password = "123456"
}

/*
 * [REQUIRED] Server Information
 *
 * 本节包含有关服务服务器的信息
 */
serverinfo
{
	/*
	 * anope将被视为的主机名, 它必须与IRC网络其余部分上的任何其他服务器名称没有冲突
	 * 请注意,它不必是现有的主机名,只需是一个不在您网络上的主机名即可。
	 * 
	 */
	name = "127.0.0.1"

	/*
	 * 应作为服务器信息显示在/WHOIS和类似查询中的文本。
	 * 
	 */
	description = "Anope IRC 统计"

	/*
	 * Anope在连接到远程服务器之前将绑定到的本地地址。
	 * 这可能对多宿主主机有用 
	 * 如果省略 Anope将让操作系统选择本地地址。此指令是可选的。
	 *
	 * 如果你不知道这意味着什么 或者不需要使用它 就把这个指令注释掉。
	 * 
	 */
	#localhost = "nowhere."

	/*
	 * 此连接使用哪个服务器id?
	 * 注：这应该*仅*用于TS6/P10 IRCd。请参阅IRCd文档 了解是否需要这样做。
	 * 
	 */
	id = "2AF"

	/* 
	 * Anope 的pid文件
	 * 
	 */
	pid = "anope.pid"

	/*
	 * 包含每日消息的文件名 路径是相对于配置目录的 
	 * 
	 */
	motd = "motd.txt"
}

/*
 * [REQUIRED] Protocol module
 *
 * 此指令告诉Anope连接时要使用哪种IRCd协议
 * 你需要修改这个来匹配你的IRCD
 *
 * 所支持的:
 *  - bahamut
 *  - hybrid
 *  - inspircd
 *  - ngircd
 *  - plexus
 *  - ratbox
 *  - solanum
 *  - unrealircd
 */
module{	name = "inspircd" }

/*
 * [REQUIRED] Network Information
 * 
 * 本节包含有关Anope将连接到的IRC网络的信息。
 * 
 */
networkinfo
{
	/*
	 * 这是Anope将运行的网络的名称。
	 */
	networkname = "ARKFUTURE"

	/*
	 * 昵称的最大长度
	 * 
	 * 
	 */
	nicklen = 30

	/* 用户名的最大长度
	 * 
	 * 
	 */
	userlen = 10

	/* 主机名的最大长度.
	 * 
	 * 
	 */
	hostlen = 70

	/* 频道名称的最大长度.
	 * 
	 */
	chanlen = 60

	/* 在单个MODE消息中可以更改的无标志模式的最大数量.
	 * 
	 */
	modelistsize = 20

	/*
	 * 昵称中允许的字符
	 * 如果您不确定, 请不要更改此选项
	 * 
	 * 
	 *
	 * 
	 */
	#nick_chars = ""

	/*
	 * 主机名中允许的字符
	 * 如果您不确定, 请不要更改此选项
	 * 
	 * 
	 * 
	 *
	 * 
	 */
	vhost_chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-"

	/*
	 * 如果改为true, 那么则允许vHosts不包含点 (.).
	 * 如果不确定请不要修改 默认即可
	 * 
	 * 
	 *
	 */
	allow_undotted_vhosts = false

	/*
	 * 不允许出现在vHost开头或结尾的字符
	 * 如果不确定请不要修改 默认即可
	 *
	 *
	 * 
	 */
	disallow_start_or_end = ".-"
}

/*
 * [REQUIRED] Anope Options
 *
 * 本节包含各种选项 这些选项决定了anope的操作方式
 */
options
{
	/*
	 * 在Linux/UNIX系统上 Anope可以在启动后为此用户和组设置uid和setgid 
	 * 如果Anope必须绑定到特权端口 这很有用
	 */
	#user = "anope"
	#group = "anope"

	/*
	 * 服务使用的案例映射
	 * 提供了两个值 ascii和rfc1459
	 * 默认为ascii
	 *
	 * 
	 *
	 * 
	 * 
	 *
	 * 
	 */
	casemap = "ascii"

	/*
	 * 设置服务删除用户之前尝试无效密码的次数(密码输出次数限制)
	 * 此指令是可选的 但建议使用
	 * 
	 * 
	 * 
	 * 
	 *
	 * 
	 */
	badpasslimit = 5

	/*
	 * 设置忘记无效密码的时间
	 * 此指令是可选的
	 * 
	 * 
	 * 
	 *
	 * 
	 */
	badpasstimeout = 1h

	/*
	 * 设置自动数据库更新之间的延迟
	 */
	updatetimeout = 2m

	/*
	 * 设置检查过期昵称和频道之间的延迟
	 */
	expiretimeout = 30m

	/*
	 * 设置从上行链路读取的超时时间
	 */
	readtimeout = 5s

	/*
	 * 设置通过WALLOPS/GLOBOPS发送程序错误警告消息之间的间隔
	 * 
	 */
	warningtimeout = 4h

	/*
	 * 设置检查超时列表的频率
	 * 如果没有给出此指令 它将默认为0
	 * 
	 * 
	 * 
	 *
	 * 
	 * 
	 * 
	 *
	 * 
	 */
	timeoutcheck = 3s

	/*
	 * 如果设置 这将允许用户让服务向他们发送PRIVMSG而不是通知
	 * 此指令是可选的 不建议使用
	 * 
	 * 
	 *
	 * 
	 * 
	 *
	 * 
	 */
	#useprivmsg = yes

	/*
	 * 如果设置 将强制服务仅响应PRIVMSG地址
	 * 此选项对某些IRCd没有影响
	 * 
	 *
	 * 
	 */
	#usestrictprivmsg = yes

	/*
	 * 如果设置 Anope将仅向IRC操作员显示 /stats o 此指令是可选的
	 * 
	 */
	#hidestatso = yes

	/*
	 * 您网络上以空格分隔的U型服务器列表
	 * 
	 * 
	 *
	 * WARNING: 不要将正常的IRC用户服务器放入此指令中
	 *
	 * 此指令是可选的
	 */
	#ulineservers = "stats.your.network"

	/*
	 * 上行链路连接重试之间需要等待多长时间(s).
	 */
	retrywait = 60s

	/*
	 * 如果设置 服务将从HELP输出中隐藏用户没有权限执行的命令
	 * 
	 */
	hideprivilegedcommands = yes

	/*
	 * 如果设置, 服务将隐藏用户无法执行的命令 因为他们没有从HELP输出中登录 
	 * 
	 */
	hideregisteredcommands = yes

	/*
	 * 如果设置, 建议允许的无效和有效命令名之间的最大差异 默认为4
	 * 
	 */
	didyoumeandifference = 4

	/* 要使用的正则表达式引擎 由正则表达式模块提供
	 * 
	 *
	 * 
	 */
	#regexengine = "regex/stdlib"

	/*
	 * 启动时要加载的语言列表
	 * 
	 * 
	 *
	 * 
	 */
	languages = "de_DE.UTF-8 el_GR.UTF-8 es_ES.UTF-8 fr_FR.UTF-8 it_IT.UTF-8 nl_NL.UTF-8 pl_PL.UTF-8 pt_PT.UTF-8 tr_TR.UTF-8"

	/*
	 * 默认语言 非注册和新注册的昵称将以该语言接收消息
	 * 设置 "en" 则使用英语. 默认为系统使用的语言
	 */
	#defaultlanguage = "es_ES.UTF-8"
}

/*
 * [OPTIONAL] BotServ
 *
 * 导入 botserv.conf, 这是 BotServ 需要的.
 *
 * 删除此块以禁用 BotServ.
 */
include
{
	type = "file"
	name = "botserv.conf"
}

/*
 * [RECOMMENDED] ChanServ
 *
 * 导入 chanserv.conf, 这是 ChanServ 需要的.
 *
 * 删除此块以禁用 ChanServ.
 */
#include
{
	type = "file"
	name = "chanserv.conf"
}

/*
 * [RECOMMENDED] Global
 *
 * 导入 global.conf, 这是 Global 需要的.
 *
 * 删除此块以禁用 Global.
 */
#include
{
	type = "file"
	name = "global.conf"
}

/*
 * [OPTIONAL] HostServ
 *
 * 导入 hostserv.conf,这是 HostServ 需要的.
 *
 * Remove this block to disable HostServ.
 */
#include
{
	type = "file"
	name = "hostserv.conf"
}

/*
 * [OPTIONAL] MemoServ
 *
 * 导入 memoserv.conf, 这是 MemoServ 需要的.
 *
 * 删除此块以禁用 MemoServ.
 */
#include
{
	type = "file"
	name = "memoserv.conf"
}

/*
 * [OPTIONAL] NickServ
 *
 * 导入 nickserv.conf, 这是 NickServ 需要的.
 *
 * 删除此块以禁用 NickServ.
 */
#include
{
	type = "file"
	name = "nickserv.conf"
}

/*
 * [RECOMMENDED] OperServ
 *
 * 导入 operserv.conf, 这是 OperServ 需要的.
 *
 * 删除此块以禁用 OperServ.
 */
include
{
	type = "file"
	name = "operserv.conf"
}

/*
 * [RECOMMENDED] Logging Configuration
 *
 * 本节用于配置日志及其记录位置.
 * 如果你愿意 你可以有多个日志块. 
 * 记住要正确保护您选择让Anope登录的任何频道
 */
log
{
	/*
	 * 目标(s) 到日志, 其可以是以下之一:
	 *   - a channel name 一个频道名
	 *   - a filename 一个文件名
	 *   - globops 
	 *
	 * 如果指定文件名 则以以下格式显示当前日期 ".YYYYMMDD" 将附加到路径上.
	 */
	target = "services.log"

	/* 记录到 services.Log 和频道 #services 
	 *
	 * 
	 * 
	 * 
	 */
	#target = "services.log #services"

	/*
	 * 仅接受来自的日志消息的源 发表评论以允许所有来源。
	 * 这可以是 a users name, a channel name, one of our clients (e.g. OperServ), or a server name.
	 */
	#source = ""

	/*
	 * 如果目标指令设置为channel or globops 则bot用于记录没有预定义发送者的通用消息。
	 * 
	 */
	bot = "Global"

	/*
	 * 保留日志文件的天数, 仅在登录到文件时有用.
	 * 设置为0表示从不删除旧日志文件.
	 *
	 * 请注意 anope必须每天24小时运行 此功能才能正常工作.
	 */
	logage = 1

	/*
	 * 此块应记录哪些类型的日志消息. 共有九大类:
	 *
	 *  admin      - 执行管理命令 (OperServ, etc)
	 *  override   - 服务运营商利用他们的权力执行他们通常无法执行的命令
	 *  commands   - 执行一般命令
	 *  servers    - 服务器操作 actions, linking, squitting, etc.
	 *  channels   - 通道操作 joins, parts, kicks, etc.
	 *  users      - 用户操作  connecting, disconnecting, changing name, etc.
	 *  other      - 所有其他没有类别的信息.
	 *  rawio      - 记录服务的原始输入和输出
	 *  debug      - 调试信息 (log files can become VERY large from this).
	 *
	 * These options determine what messages from the categories should be logged. Wildcards are accepted, and
	 * you can also negate values with a ~. For example, "~operserv/akill operserv/*" would log all operserv
	 * messages except for operserv/akill. Note that processing stops at the first matching option, which
	 * means "* ~operserv/*" would log everything because * matches everything.
	 *
	 * 有效的管理 覆盖和命令选项包括:
	 *    pseudo-serv/commandname (e.g. operserv/akill, chanserv/set)
	 *
	 * 有效的服务器选项包括:
	 *    connect, quit, sync, squit
	 *
	 * 有效的频道选项包括:
	 *    create, destroy, join, part, kick, leave, mode
	 *
	 * 有效的用户选项包括:
	 *    connect, disconnect, quit, nick, ident, host, mode, maxusers, oper, away
	 *
	 * Rawio 和 debug 是简单的 yes/no 答案, 没有类型.
	 *
	 * 请注意 模块可能会将自己的值添加到这些选项中
	 */
	admin = "*"
	override = "chanserv/* nickserv/* memoserv/set ~botserv/set botserv/*"
	commands = "~operserv/* *"
	servers = "*"
	#channels = "~mode *"
	users = "connect disconnect nick"
	other = "*"
	rawio = no
	debug = no
}

/*
 * 一个日志块 globops 使用的.
 */
log
{
	bot = "Global"
	target = "globops"
	admin = "global/* operserv/chankill operserv/mode operserv/kick operserv/akill operserv/s*line operserv/noop operserv/jupe operserv/set operserv/svsnick operserv/svsjoin operserv/svspart nickserv/getpass */drop"
	servers = "squit"
	users = "oper"
	other = "expire/* bados akill/*"
}

/*
 * [RECOMMENDED] Oper Access Config
 *
 * 本节用于设置员工对受限操作命令的访问权限.
 * 您可以定义命令和权限组 以及谁可以使用它们.
 *
 * 建议使用此块 因为没有它 您将无法访问大多数opera命令.
 *
 * 下面的命令名是默认值 在 *serv.conf 配置
 * 如果您配置了具有权限的其他命令 例如来自第三方模块的命令
 * 在使用命令之前 权限必须包含在opertype块中.
 *
 * 可用权限:
 *  botserv/administration        - Can view and assign private BotServ bots
 *  botserv/fantasy               - Can use fantasy commands without the FANTASY privilege
 *  chanserv/administration       - Can modify the settings of any channel (including changing of the owner!)
 *  chanserv/access/list          - Can view channel access and akick lists, but not modify them
 *  chanserv/access/modify        - Can modify channel access and akick lists, and use /chanserv enforce
 *  chanserv/auspex               - Can see any information with /CHANSERV INFO
 *  chanserv/no-register-limit    - May register an unlimited number of channels and nicknames
 *  chanserv/kick                 - Can kick and ban users from channels through ChanServ
 *  chanserv/drop/override        - Allows dropping channels without using a confirmation code
 *  memoserv/info                 - Can see any information with /MEMOSERV INFO
 *  memoserv/set-limit            - Can set the limit of max stored memos on any user and channel
 *  memoserv/no-limit             - Can send memos through limits and throttles
 *  nickserv/alist                - Can see the channel access list of other users
 *  nickserv/auspex               - Can see any information with /NICKSERV INFO
 *  nickserv/cert                 - Can modify other users certificate lists
 *  nickserv/confirm              - Can confirm other users nicknames
 *  nickserv/drop                 - Can drop other users nicks
 *  nickserv/drop/override        - Allows dropping nicks without using a confirmation code
 *  nickserv/recover              - Can recover other users nicks
 *  operserv/config               - Can modify 服务器的 configuration
 *  operserv/oper/modify          - Can add and remove operators with at most the same privileges
 *  protected                     - Can not be kicked from channels by services
 *
 * 可用命令:
 *   botserv/bot/del          botserv/bot/add               botserv/bot/change        botserv/set/private
 *   botserv/set/nobot
 *
 *   chanserv/drop            chanserv/getkey               chanserv/invite
 *   chanserv/list            chanserv/suspend              chanserv/topic
 *
 *   chanserv/saset/noexpire
 *
 *   memoserv/sendall        memoserv/staff
 *
 *   nickserv/getemail         nickserv/suspend       nickserv/ajoin           nickserv/list
 *
 *   nickserv/saset/autoop   nickserv/saset/display    nickserv/saset/email    nickserv/saset/greet
 *   nickserv/saset/kill     nickserv/saset/keepmodes  nickserv/saset/language  nickserv/saset/message
 *   nickserv/saset/neverop  nickserv/saset/noexpire   nickserv/saset/password  nickserv/saset/private
 *   nickserv/saset/url
 *
 *   hostserv/set            hostserv/del           hostserv/list
 *
 *   global/global         global/queue          global/server
 *
 *   operserv/news         operserv/stats        operserv/kick       operserv/exception    operserv/seen
 *   operserv/mode         operserv/session      operserv/modinfo    operserv/ignore       operserv/chanlist
 *   operserv/chankill     operserv/akill        operserv/sqline     operserv/snline       operserv/userlist
 *   operserv/oper         operserv/config       operserv/umode      operserv/logsearch
 *   operserv/modload      operserv/jupe         operserv/set        operserv/noop
 *   operserv/quit         operserv/update       operserv/reload     operserv/restart
 *   operserv/shutdown     operserv/svs          operserv/kill
 *
 * Firstly, we define 'opertypes' which are named whatever we want ('Network Administrator', etc).
 * These can contain commands for oper-only strings (see above) which grants access to that specific command,
 * and privileges (which grant access to more general permissions for the named area).
 * Wildcard entries are permitted for both, e.g. 'commands = "operserv/*"' for all OperServ commands.
 * You can also negate values with a ~. For example, "~operserv/akill operserv/*" would allow all OperServ
 * commands except for operserv/akill. Note that processing stops at the first matching option, which
 * means "* ~operserv/*" would allow everything because * matches everything.
 *
 * 下面是一些默认的示例类型, 但这绝不是详尽无遗的,
 * 建议您根据需要配置它们
 */

opertype
{
	/* 此操作类型的名称 */
	name = "Helper"

	/* 命令 */
	commands = "hostserv/*"
}

opertype
{
	/* 此操作类型的名称 */
	name = "Services Operator"

	/* 这继承了什么操作类型 */
	inherits = "Helper, Another Helper"

	/* 命令 */
	commands = "chanserv/list chanserv/suspend chanserv/topic memoserv/staff nickserv/list nickserv/suspend operserv/mode operserv/chankill operserv/akill operserv/session operserv/modinfo operserv/sqline operserv/oper operserv/kick operserv/ignore operserv/snline"

	/* 这个操作器有什么特权 */
	privs = "chanserv/auspex chanserv/no-register-limit memoserv/* nickserv/auspex nickserv/confirm"

	/*
	 * 当用户识别与此操作类型链接的帐户时 在用户身上设置的模式
	 * 请注意 某些IRCd 如InspIRCd 不允许直接设置+o 这将不起作用
	 * 
	 * 
	 *
	 * 
	 */
	#modes = "+o"
}

opertype
{
	name = "Services Administrator"

	inherits = "Services Operator"

	commands = "botserv/* chanserv/access/list chanserv/drop chanserv/getkey chanserv/saset/noexpire memoserv/sendall nickserv/saset/* nickserv/getemail operserv/news operserv/jupe operserv/svs operserv/stats operserv/noop operserv/forbid global/*"

	privs = "*"
}

opertype
{
	name = "Services Root"

	commands = "*"

	privs = "*"
}

/*
 * 在上述 opertype 部分定义不同类型的运算符后, 我们现在通过以下方式定义谁属于这些组 'oper' 块
 * 
 *
 * 默认设置是注释掉这些内容 (so NOBODY will have access).
 * 您可能至少想添加您自己和其他一些人.
 *
 * 与所有权限一样  请确保仅授予可信赖的人访问权限.
 */

oper
{
	/* 此服务操作者的昵称 */
	name = "arkfuture"

	/* 此人将具有的操作类型 */
	type = "Services Root"

	/* 如果设置 用户必须是IRCD上的操作者才能获得其操作者权限
	 * 
	 */
	require_oper = yes

	/* 可选密码。如果已定义 用户必须首先使用 "/OPERSERV LOGIN" 登录 */
	password = "123456"

	/* 可选的SSL指纹 如果已定义 则需要能够使用此操作类型 */
	#certfp = "ed3383b3f7d74e89433ddaa4a6e5b2d7"

	/* 主机名 */
	host = "*@*"

	/* 为识别此操作块的用户设置的可选vhosts 
	 * 这将覆盖HostServ vHosts 并且可能不适用于所有IRCd
	 */
	vhost = "ARKFUTURE"
}

#oper
{
	name = "nick2"
	type = "Services Administrator"
}

#oper
{
	name = "nick3"
	type = "Helper"
}

/*
 * [OPTIONAL] Mail Config
 *
 * 邮件配置
 * 如果usemail指令设置为yes 
 * 则其他配置是必须的
 *
 * 注意: 如果您希望您的IP地址不为人所知, 您应该设置一个邮件中继来剥离相关的邮件头
 * 
 * 
 */
mail
{
	/*
	 * 如果设置 此选项将启用Anope中的邮件命令 如果您没有安装与Sendmail兼容的邮件程序
	 * 可以选择禁用它。虽然此指令是可选的
	 * 
	 * 
	 */
	usemail = no

	/*
	 * 这是用于调用邮件程序发送邮件的命令行
	 * 大多数sendmail应用程序 或其替代品 都需要-t选项使用
	 * 
	 * 
	 *
	 * 
	 * 
	 * 
	 * 
	 *
	 * 
	 * 
	 */
	#sendmailpath = "/usr/sbin/sendmail -it"

	/*
	 * 这是发送所有电子邮件的电子邮件地址
	 * 它应该存在
	 */
	sendfrom = "services@example.com"

	/*
	 * 这控制了用户在发送之前必须等待的最短时间
	 * 强烈建议使用它
	 * 
	 *
	 * 
	 * 
	 *
	 * 
	 */
	delay = 5m

	/*
	 * 如果设置 Anope将不会在TO:字段电子邮件周围加引号。
	 * 可选的 也是必须的
	 *
	 * 
	 * 
	 */
	#dontquoteaddresses = yes

	/*
	 * 发送电子邮件时使用的内容类型
	 *
	 * 
	 * 
	 */
	#content_type = "text/plain; charset=UTF-8"

	/*
	 * 用户注册帐户时发送给他们的电子邮件的主题和信息
	 *
	 * 模板为:
	 *  %n - 获取 nickname
	 *  %N - 获取 network name
	 *  %c - 获取 confirmation code
	 */
	registration_subject = "Nickname registration for %n | 名称注册 %n"
	registration_message = "Hi | 您好,

				You have requested to register the nickname %n on %N.
				Please type \" /msg NickServ CONFIRM %c \" to complete registration.

				If you don't know why this mail was sent to you, please ignore it silently.

				%N administrators.

				---

				您已请求在 %n 上注册昵称 %n
				请键入 \" /msg NickServ CONFIRM %c \" 以完成注册

				如果你不知道为什么这封邮件被发送给你 请默默地忽略它

				%N 管理员"

	/*
	 * 当用户请求新密码时发送给他们的电子邮件的主题和消息
	 *
	 * 模板为:
	 *  %n - 获取 nickname
	 *  %N - 获取 network name
	 *  %c - 获取 confirmation code
	 */
	reset_subject = "Reset password request for %n | 重置密码  %n"
	reset_message = "Hi | 您好,

			You have requested to have the password for %n reset.
			To reset your password, type \" /msg NickServ CONFIRM %n %c \"

			If you don't know why this mail was sent to you, please ignore it silently.

			%N administrators.

			---
			
			您已请求重置 %n 的密码
			要重置密码 请键入 \" /msg NickServ CONFIRM %n %c \"

			如果你不知道为什么这封邮件被发送给你 请默默地忽略它 

			%N 管理员 "

	/*
	 * 当用户请求新的电子邮件地址时 发送给他们的电子邮件的主题和消息。
	 *
	 * 模板为:
	 *  %e - 获取 old email address
	 *  %E - 获取 new email address
	 *  %n - 获取 nickname
	 *  %N - 获取 network name
	 *  %c - 获取 confirmation code
	 */
	emailchange_subject = "Email confirmation | 电子邮件确认"
	emailchange_message = "Hi | 您好,

			You have requested to change your email address from %e to %E.
			Please type \" /msg NickServ CONFIRM %c \" to confirm this change.

			If you don't know why this mail was sent to you, please ignore it silently.

			%N administrators.
			
			---
			
			您已请求将您的电子邮件地址从 %e 更改为 %E
			请键入 \" /msg NickServ CONFIRM %c \" 以确认此更改

			如果你不知道为什么这封邮件被发送给你 请默默地忽略它

			%N管理员 "

	/*
	 * 当用户收到新备忘录时 发送给他们的电子邮件的主题和信息.
	 *
	 * Available tokens for this template are:
	 *  %n - 获取 nickname
	 *  %s - 获取 发送者的 nickname
	 *  %d - 获取 memo number
	 *  %t - 获取 memo text
	 *  %N - 获取 network name
	 */
	memo_subject = "New memo | 新的备忘录"
	memo_message = "Hi %n | 您好 %n,

			You've just received a new memo from %s. This is memo number %d.

			Memo text:

			%t
			
			---
			
			您刚刚收到来自 %s 的新备忘录。这是备忘录编号 %d

			备忘录文本:

			%t"
}

/*
 * [REQUIRED] Database configuration.
 *
 * 本节用于配置Anope使用的数据库
 * 您应该至少加载一个数据库方法 否则您拥有的任何数据都不会被存储
 * 
 */

/*
 * [DEPRECATED] db_old
 * 
 * 旧数据库加载后升级
 * 
 * 
 * 
 */
#module
{
	name = "db_old"

	/*
	 * 这是数据库使用的加密类型
	 * 您必须设置为: md5, oldmd5, sha1, and plain.
	 * 
	 * 
	 */
	#hash = "md5"
}

/*
 * db_atheme
 *
 * 这允许从Atheme导入数据库
 * 您应该加载另一个数据库模块 因为它只能读取Atheme数据库 不能写入它们
 */
#module
{
	name = "db_atheme"

	/*
	 * The database name db_atheme should use.
	 */
	database = "atheme.db"
}

/*
 * [RECOMMENDED] db_flatfile
 *
 * 这是默认的平面文件数据库格式
 */
module
{
	name = "db_flatfile"

	/*
	 * 名称为 db_flatfile 应该使用
	 */
	database = "anope.db"

	/*
	 * 设置数据库备份的保留天数
	 * 可选 但建议使用
	 *
	 * 
	 *
	 * 
	 */
	keepbackups = 1

	/*
	 * 允许Anope继续文件写入操作 (即数据库保存)
	 * 可选 但不建议使用 如果清楚你在做什么
	 * 
	 * 
	 *
	 * 
	 * 
	 *
	 * 
	 */
	#nobackupokay = yes

	/*
	 * 如果启用 服务将分叉子进程以保存数据库
	 * 这只适用于非常大的数据库
	 * 
	 * 
	 * 
	 */
	fork = no
}

/*
 * db_sql and db_sql_live
 *
 * db_sql 模块允许使用其中一个sql引擎保存和加载数据库 逐步更新
 * db_sql_live 模块允许使用其中一个sql引擎保存和加载数据库 及时更新
 * 
 * 
 *
 * 
 * 
 * 
 * 
 *
 */
#module
{
	name = "db_sql"
	#name = "db_sql_live"

	/*
	 * 设置数据库类型(如mysql等) 这些在modules.conf中配置
	 * 
	 */
	engine = "sqlite/main"

	/*
	 * 在每个创建的表的名称前添加一个可选前缀.
	 * 
	 */
	#prefix = "anope_db_"

	/* 启动时是否将其他数据库模块中的数据导入
	 * 
	 * 
	 * 
	 * 
	 *
	 * 
	 * 
	 * 
	 */
	import = false
}

/*
 * db_redis
 *
 * 
 * 
 *
 * 
 * 
 * 
 * 
 */
#module
{
	name = "db_redis"

	/*
	 * 使用Redis数据库 这必须使用redis进行配置
	 */
	engine = "redis/main"
}

/*
 * [RECOMMENDED] Encryption modules.
 *
 * 加密模块的使用
 * 
 *
 * 
 * 
 * 
 * 
 */

/*
 * enc_sha2
 * 
 * 
 * 
 * 
 */
module
{
	name = "enc_sha2"

	/** The sub-algorithm to use. Can be set to sha224 for SHA-224, sha256 for
	 * SHA-256, sha284 for SHA-384 or sha512 to SHA-512. Defaults to sha256.
	 */
	#algorithm = "sha256"
}

/*
 * [EXTRA] enc_argon2
 *
 * Provides support for encrypting passwords using the Argon2 algorithm. See
 * https://en.wikipedia.org/wiki/Argon2 for more information.
 */
#module
{
	name = "enc_argon2"

	/** The sub-algorithm to use. Can be set to argon2d for Argon2d, argon2i for
	 * Argon2i, or argon2id for Argon2id. Defaults to argon2id.
	 */
	#algorithm = "argon2id"

	/** The memory hardness in kibibytes of the Argon2 algorithm. Defaults to
	 * 128 mebibytes.
	 */
	#memory_cost = 121072

	/** The time hardness (iterations) of the Argon2 algorithm. Defaults to 3.
	 */
	#time_cost = 3

	/** The amount of parallel threads to use when encrypting passwords.
	 * Defaults to 1.
	 */
	#parallelism = 1

	/** The length in bytes of an Argon2 hash. Defaults to 32. */
	#hash_length = 32

	/** The length in bytes of an Argon2 salt. Defaults to 32. */
	#salt_length = 32
}

/*
 * enc_bcrypt
 *
 * Provides support for encrypting passwords using the Bcrypt algorithm. See
 * https://en.wikipedia.org/wiki/Bcrypt for more information.
 */
#module
{
	name = "enc_bcrypt"

	/** The number of Bcrypt rounds to perform on passwords. Can be set to any
	 * number between 10 and 32 but higher numbers are more CPU intensive and
	 * may impact performance.
	 */
	#rounds = 10
}

/*
 * [EXTRA] enc_posix
 *
 * Provides verify-only support for passwords encrypted using the POSIX crypt()
 * function. Load this if you are migrating from another services packages such
 * as Atheme. See https://en.wikipedia.org/wiki/Crypt_(C) for more information.
 *
 * You must load another encryption method before this to re-encrypt passwords
 * with when a user logs in.
 */
#module { name = "enc_posix" }

/*
 * [DEPRECATED] enc_md5, enc_none, enc_old, enc_sha1, enc_sha256
 *
 * Provides verify-only support for passwords encrypted using encryption methods
 * from older versions of Anope. These methods are no longer considered secure
 * and will be removed in a future version of Anope. Only load them if you are
 * upgrading from a previous version of Anope that used them.
 *
 * enc_md5:    Verifies passwords encrypted with the MD5 algorithm
 * enc_none:   Verifies passwords that are not encrypted
 * enc_sha1:   Verifies passwords encrypted with the SHA1 algorithm
 * enc_old:    Verifies passwords encrypted with the broken MD5 algorithm used
 *             before 1.7.17.
 * enc_sha256: Verifies passwords encrypted with the SHA256 algorithm using a
 *             custom initialisation vector as a salt.
 *
 * You must load another encryption method before this to re-encrypt passwords
 * with when a user logs in.
 */
#module { name = "enc_md5" }
#module { name = "enc_none" }
#module { name = "enc_old" }
#module { name = "enc_sha1" }
#module { name = "enc_sha256" }

/* 额外可选的模块 */
#include
{
	type = "file"
	name = "modules.conf"
}

/*
 * Chanstats 模块.
 * 需要 MySQL 数据库.
 */
#include
{
	type = "file"
	name = "chanstats.conf"
}

/*
 * IRC2SQL 网关
 * 此模块收集有关用户、渠道和服务器的数据
 * 它本身并不构建统计数据 但是 它为您提供了数据库 这取决于您如何使用它
 *
 * 需要MySQL数据库和MySQL 5.5或更高版本
 */
#include
{
	type = "file"
	name = "irc2sql.conf"
}